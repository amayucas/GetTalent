Which of these access specifiers must be used for main() method? 
a) private 
b) public 
c) protected 
d) None of the mentioned 
Answer: b 
--------
Which of these is used to access member of class before object of that class is created? 
a) public 
b) private 
c) static 
d) protected 
Answer: c 
--------
Which of these is used as default for a member of a class if no access specifier is used for it? 
a) private 
b) public 
c) public, within its own package 
d) protected 
Answer: a 
--------
What is the process by which we can control what parts of a program can access the members of a class? 
a) Polymorphism 
b) Abstraction 
c) Encapsulation 
d) Recursion 
Answer: c 
--------
Which of the following statements are incorrect? 
a) public members of class can be accessed by any code in the program. 
b) private members of class can only be accessed by other members of the class. 
c) private members of class can be inherited by a sub class, and become protected members in sub class. 
d) protected members of a class can be inherited by a sub class, and become private members of the sub class. 
Answer: c 
--------
What is the output of this program?
    class access{
        public int x;
 	private int y;
        void cal(int a, int b){
            x =  a + 1;
            y =  b;
        }        
    }    
    class access_specifier {
        public static void main(String args[])
        {
            access obj = new access();   
            obj.cal(2, 3);
            System.out.println(obj.x + " " + obj.y);     
        }
   }
a) 3 3
b) 2 3 
c) Runtime Error 
d) Compilation Error 
Answer: c 
--------
What is the output of this program?
    class access{
        public int x;
 	private int y;
        void cal(int a, int b){
            x =  a + 1;
            y =  b;
        }   
        void print() {
            system.out.println(" " + y);     
        } 
    }   
    class access_specifier {
        public static void main(String args[])
        {
            access obj = new access();   
            obj.cal(2, 3);
            System.out.println(obj.x);
            obj.print();     
        }
   }
a) 2 3 
b) 3 3 
c) Runtime Error 
d) Compilation Error 
Answer: b 
--------
What is the output of this program?
    class static_out {
        static int x;
 	static int y;
        void add(int a, int b){
            x = a + b;
            y = x + b;
        }
    }    
    class static_use {
        public static void main(String args[])
        {
            static_out obj1 = new static_out();
            static_out obj2 = new static_out();   
            int a = 2;
            obj1.add(a, a + 1);
            obj2.add(5, a);
            System.out.println(obj1.x + " " + obj2.y);     
        }
   }
a) 7 7 
b) 6 6 
c) 7 9 
d) 9 7 
Answer: c 
--------
Which of these access specifier must be used for class so that it can be inherited by another sub class?
a) public 
b) private 
c) protected 
d) None of the mentioned 
Answer: a 
--------
Which of these events is generated when a button is pressed? 
a) ActionEvent 
b) KeyEvent 
c) WindowEvent 
d) AdjustmentEvent 
Answer: a 
--------
What is an event in delegation event model used by Java programming language? 
a) An event is an object that describes a state change in a source. 
b) An event is an object that describes a state change in processing. 
c) An event is an object that describes any change by the user and system. 
d) An event is a class used for defining object, to create events. 
Answer: a 
--------
Which of these methods can be used to obtain the command name for invoking ActionEvent object? 
a) getCommand() 
b) getActionCommand() 
c) getActionEvent() 
d) getActionEventCommand() 
Answer: b 
--------
Which of these are integer constants defined in ActionEvent class? 
a) ALT_MASK 
b) CTRL_MASK 
c) SHIFT_MASK 
d) All of the mentioned 
Answer: b 
--------
Which of these events is generated by scroll bar? 
a) ActionEvent 
b) KeyEvent 
c) WindowEvent 
d) AdjustmentEvent 
Answer: d 
--------
Which of these methods can be used to determine the type of adjustment event? 
a) getType() 
b) getEventType() 
c) getAdjustmentType() 
d) getEventObjectType() 
Answer: c 
--------
Which of these methods can be used to know the degree of adjustment made by the user? 
a) getValue() 
b) getAdjustmentType() 
c) getAdjustmentValue() 
d) getAdjustmentAmount() 
Answer: c 
--------
Which of these functions is called to display the output of an applet? 
a) display() 
b) print() 
c) displayApplet() 
d) PrintApplet() 
Answer: b 
--------
Which of these methods can be used to output a sting in an applet? 
a) display() 
b) print() 
c) drawString() 
d) transient() 
Answer: c 
--------
What does AWT stands for? 
a) All Window Tools 
b) All Writing Tools 
c) Abstract Window Toolkit 
d) Abstract Writing Toolkit 
Answer: c 
--------
Which of these methods is a part of Abstract Window Toolkit (AWT)  ? 
a) display() 
b) print() 
c) drawString() 
d) transient() 
Answer: b 
--------
Which of these modifiers can be used for a variable so that it can be accessed from any thread or parts of a program? 
a) transient 
b) volatile 
c) global 
d) No modifier is needed 
Answer: b 
--------
Which of these operators can be used to get run time information about an object? 
a) getInfo 
b) Info 
c) instanceof 
d) getinfoof 
Answer: c 
--------
What is the Message is displayed in the applet made by this program?
    import java.awt.*;
    import java.applet.*;
    public class myapplet extends Applet {
        public void paint(Graphics g) {
            g.drawString("A Simple Applet", 20, 20);    
        }
    }
a) A Simple Applet
b) A Simple Applet 20 20 
c) Compilation Error 
d) Runtime Error 
Answer: a 
--------
What is the length of the application box made by this program?
    import java.awt.*;
    import java.applet.*;
    public class myapplet extends Applet {
        public void paint(Graphics g) {
            g.drawString("A Simple Applet", 20, 20);    
        }
    }
a) 20 
b) 50 
c) 100 
d) System dependent 
Answer: a 
--------
What is the length of the application box made by this program?
    import java.awt.*;
    import java.applet.*;
    public class myapplet extends Applet {
        Graphic g;
        g.drawString("A Simple Applet", 20, 20);    
    }
a) 20
b) Default value 
c) Compilation Error 
d) Runtime Error 
Answer: c 
--------
Which of these operators is used to allocate memory to array variable in Java? 
a) malloc 
b) alloc 
c) new 
d) new malloc 
Answer:c 
--------
Which of these is an incorrect array declaration? 
a) int arr[] = new int[5]
b) int [] arr = new int[5]
c) int arr[]
   arr = new int[5]
d) int arr[] = int [5] new 
Answer:d 
--------
What will this code print? 
    int arr[] = new int [5]; 
    System.out.print(arr); 
a) 0 
b) value stored in arr[0]. 
c) 00000 
d) Garbage value 
Answer:d 
--------
Which of these is an incorrect Statement? 
a) It is necessary to use new operator to initialize an array. 
b) Array can be initialized using comma separated expressions surrounded by curly braces. 
c) Array can be initialized when they are declared. 
d) None of the mentioned 
Answer: a 
--------
Which of these is necessary to specify at time of array initialization? 
a) Row 
b) Column 
c) Both Row and Column 
d) None of the mentioned 
Answer:a 
--------
What is the output of this program?
    class array_output {
        public static void main(String args[]) 
        {
            int array_variable [] = new int[10];
	    for (int i = 0; i < 10; ++i) {
                array_variable[i] = i;
                System.out.print(array_variable[i] + " ");
                i++;
            }
        } 
    }
a) 0 2 4 6 8
b) 1 3 5 7 9 
c) 0 1 2 3 4 5 6 7 8 9 
d) 1 2 3 4 5 6 7 8 9 10 
Answer:a 
--------
What is the output of this program?
    class multidimention_array {
        public static void main(String args[])
        {
            int arr[][] = new int[3][];
            arr[0] = new int[1];
            arr[1] = new int[2];
            arr[2] = new int[3];               
	    int sum = 0;
	    for (int i = 0; i < 3; ++i) 
	        for (int j = 0; j < i + 1; ++j)
                    arr[i][j] = j + 1;
	    for (int i = 0; i < 3; ++i) 
	        for (int j = 0; j < i + 1; ++j)
                    sum + = arr[i][j];
	    System.out.print(sum); 	
        } 
    }
a) 11 
b) 10 
c) 13 
d) 14 
Answer:b 
--------
What is the output of this program?
    class evaluate {
        public static void main(String args[]) 
            {
	        int arr[] = new int[] {0 , 1, 2, 3, 4, 5, 6, 7, 8, 9};
	        int n = 6;
                n = arr[arr[n] / 2];
	        System.out.println(arr[n] / 2);
            } 
    }
a) 3 
b) 0 
c) 6 
d) 1 
Answer:d 
--------
What is the output of this program?
    class array_output {
        public static void main(String args[]) 
        {
            char array_variable [] = new char[10];
	    for (int i = 0; i < 10; ++i) {
                array_variable[i] = 'i';
                System.out.print(array_variable[i] + "");
            }
        } 
    }
a) 1 2 3 4 5 6 7 8 9 10
b) 0 1 2 3 4 5 6 7 8 9 10 
c) i j k l m n o p q r 
d) i i i i i i i i i i 
Answer:d 
--------
Arrays in Java are implemented as? 
a) class 
b) object 
c) variable 
d) None of the mentioned 
Answer: b 
--------
Which of these keywords is used to prevent content of a variable from being modified? 
a) final 
b) last 
c) constant 
d) static 
Answer: a 
--------
Which of these cannot be declared static? 
a) class 
b) object 
c) variable 
d) method 
Answer: b 
--------
Which of the following statements are incorrect? 
a) static methods can call other static methods only. 
b) static methods must only access static data. 
c) static methods can not refer to this or super in any way. 
d) when object of class is declared, each object contains its own copy of static variables. 
Answer: d 
--------
Which of the following statements are incorrect? 
a) Variables declared as final occupy memory. 
b) final variable must be initialized at the time of declaration. 
c) Arrays in java are implemented as an object. 
d) All arrays contain an attribute-length which contains the number of elements stored in the array. 
Answer: a 
--------
Which of these methods must be made static? 
a) main() 
b) delete() 
c) run() 
d) finalize() 
Answer: a 
--------
What is the output of this program?
    class access{
        public int x;
 	static int y;
        void cal(int a, int b){
            x +=  a ;
            y +=  b;
        }        
    }    
    class static_specifier {
        public static void main(String args[])
        {
            access obj1 = new access();
            access obj2 = new access();   
            obj1.x = 0;
            obj1.y = 0;
            obj1.cal(1, 2);
            obj2.x = 0;
            obj2.cal(2, 3);
            System.out.println(obj1.x + " " + obj2.y);     
        }
   }
a) 1 2
b) 2 3 
c) 3 2 
d) 1 5 
Answer: d 
--------
What is the output of this program?
    class access{
       static int x;
       void increment(){
           x++;
       }   
     }   
    class static_use {
        public static void main(String args[])
        {
            access obj1 = new access();
            access obj2 = new access();
            obj1.x = 0;   
            obj1.increment();
            obj2.increment();
            System.out.println(obj1.x + " " + obj2.x);
            }
   }
a) 1 2 
b) 1 1 
c) 2 2 
d) Compilation Error 
Answer: c 
--------
What is the output of this program?
    class static_out {
        static int x;
 	static int y;
        void add(int a , int b){
            x = a + b;
            y = x + b;
        }
    }    
    class static_use {
        public static void main(String args[])
        {
            static_out obj1 = new static_out();
            static_out obj2 = new static_out();   
            int a = 2;
            obj1.add(a, a + 1);
            obj2.add(5, a);
            System.out.println(obj1.x + " " + obj2.y);     
        }
   }
a) 7 7 
b) 6 6 
c) 7 9 
d) 9 7 
Answer: c 
--------
What is the output of this program?
    class Output {
        public static void main(String args[])
        {
            int arr[] = {1, 2, 3, 4, 5};
            for ( int i = 0; i < arr.length - 2; ++i)
                System.out.println(arr[i] + " ");
        } 
    }
a) 1 2
b) 1 2 3 
c) 1 2 3 4 
d) 1 2 3 4 5 
Answer: b 
--------
Which of these have highest precedence? 
a) () 
b) ++ 
c) * 
d) >> 
Answer: a 
--------
What should be expression1 evaluate to in using ternary operator as in this line? 
   expression1 ?  expression2  :  expression3 
a) Integer 
b) Floating - point numbers 
c) Boolean 
d) None of the mentioned 
Answer:c 
--------
What is the value stored in x in following lines of code? 
    int x, y, z; 
    x = 0; 
    y = 1; 
    x = y = z = 8; 
a) 0 
b) 1 
c) 9 
d) 8 
Answer: d 
--------
What is the order of precedence (highest to lowest) of following operators? 
    1. & 
    2. ^ 
    3. ?: 
a) 1 -> 2 -> 3 
b) 2 -> 1 -> 3 
c) 3 -> 2 -> 1 
d) 2 -> 3 -> 1 
Answer: a 
--------
Which of these statements are incorrect? 
a) Equal to operator has least precedence. 
b) Brackets () have highest precedence. 
c) Division operator, /, has higher precedence than multiplication operator. 
d) Addition operator, +, and subtraction operator have equal precedence. 
Answer: c 
--------
What is the output of this program?
    class operators {
        public static void main(String args[])
        {
            int var1 = 5; 
            int var2 = 6;
            int var3;
            var3 = ++ var2 * var1 / var2 + var2;
            System.out.print(var3);
        } 
    }
a) 10
b) 11 
c) 12 
d) 56 
Answer:c 
--------
What is the output of this program?
    class operators {
        public static void main(String args[]) 
        {    
             int x = 8;
             System.out.println(++x * 3 + " " + x);
        } 
    }
a) 24 8 
b) 24 9 
c) 27 8 
d) 27 9 
Answer: d 
--------
What is the output of this program?
    class ternary_operator {
        public static void main(String args[]) 
        {        
             int x = 3;
             int y = ~ x;
             int z;
             z = x > y ? x : y;
             System.out.print(z);
        } 
    }
a) 0 
b) 1 
c) 3 
d) -4 
Answer:c 
--------
Which of these lines of code will give better performance?
   1. a | 4 + c >> b & 7; 
   2. (a | ((( 4 * c ) >> b ) & 7 )) 
a) 1 will give better performance as it has no parentheses. 
b) 2 will give better performance as it has parentheses. 
c) Both 1 & 2 will give equal performance. 
d) Dependent on the computer system. 
Answer: c 
--------
Which of these is not a bitwise operator? 
a) & 
b) &= 
c) |= 
d) <=
Answer:a 
--------
On applying Left shift operator, <<, on an integer bits are lost one they are shifted past which position bit?
a) 1
b) 32
c) 33
d) 31
Answer: b 
--------
Which of these statements are incorrect? 
a) The left shift operator, <<, shifts all of the bite in a value to the left specified number of times. 
b) The right shift operator, >>, shifts all of the bite in a value to the right specified number of times. 
c) The left shift operator can be used as an alternative to multiplying by 2. 
d) The right shift operator automatically fills the higher order bits with 0. 
Answer: d 
--------
What is the output of this program?
    class bitwise_operator {
        public static void main(String args[])
        {
            int var1 = 42;
            int var2 = ~var1;
            System.out.print(var1 + " " + var2);     	
        } 
    }
a) 42 42 
b) 43 43 
c) 42 -43 
d) 42 43 
Answer:c 
--------
What is the output of this program?
    class bitwise_operator {
        public static void main(String args[]) 
        {    
             int a = 3;
             int b = 6;
 	     int c = a | b;
             int d = a & b;             
             System.out.println(c + " "  + d);
        } 
    }
a) 7 2 
b) 7 7 
c) 7 5 
d) 5 2 
Answer: a 
--------
What is the output of this program?
    class leftshift_operator {
        public static void main(String args[]) 
        {        
             byte x = 64;
             int i;
             byte y; 
             i = x << 2;
             y = (byte) (x << 2)
             System.out.print(i + " " + y);
        } 
    }
a) 0 64 
b) 64 0 
c) 0 256 
d) 256 0 
Answer:d 
--------
What is the output of this program?
    class rightshift_operator {
        public static void main(String args[]) 
        {    
             int x; 
             x = 10;
             x = x >> 1;
             System.out.println(x);
        } 
    }
a) 10
b) 5 
c) 2 
d) 20 
Answer: b 
--------
Which of these methods of Boolean wrapper returns boolean equivalent of an object. 
a) getBool() 
b) booleanValue() 
c) getbooleanValue() 
d) getboolValue() 
Answer: b 
--------
Which of the following constant are defined in Boolean wrapper? 
a) TRUE 
b) FLASE 
c) TYPE 
d) All of the mentioned 
Answer: d 
--------
Which of these methods return string equivalent of Boolean object? 
a) getString() 
b) toString() 
c) converString() 
d) getStringObject() 
Answer: b 
--------
Which of these methods is used to know whether a string contains "true"? 
a) valueOf() 
b) valueOfString() 
c) getString() 
d) None of the mentioned 
Answer: a 
--------
Which of these class have only one field? 
a) Character 
b) Boolean 
c) Byte 
d) void 
Answer: d 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
            String str = "true";
            boolean x = Boolean.valueOf(str);
            System.out.print(x);
        }
    }
a) true
b) flase 
c) Compilation Error 
d) Runtime Error 
Answer: a 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
            String str = "true false true";
            boolean x = Boolean.valueOf(str);
            System.out.print(x);
        }
    }
a) true 
b) flase 
c) Compilation Error 
d) Runtime Error 
Answer: a 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
            String str = "TRUE";
            boolean x = Boolean.valueOf(str);
            System.out.print(x);
        }
    }
a) true 
b) flase 
c) Compilation Error 
d) Runtime Error 
Answer: a 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
	    String str = "true false";
            boolean x = Boolean.parseBoolean(str);
            System.out.print(x);
        }
    }
a) true
b) false 
c) System Dependent 
d) Compilation Error 
Answer: b 
--------
Which of these methods of Byte wrapper can be used to obtain Byte object from a string? 
a) toString() 
b) getString() 
c) decode() 
d) encode() 
Answer: c 
--------
Which of the following methods Byte wrapper return the value as a double? 
a) doubleValue() 
b) converDouble() 
c) getDouble() 
d) getDoubleValue() 
Answer: a 
--------
Which of these is a super class of wrappers Byte and short wrappers? 
a) Long 
b) Digits 
c) Float 
d) Number 
Answer: d 
--------
Which of these methods is not defined in both Byte and Short wrappers? 
a) intValue() 
b) isInfinite() 
c) toString() 
d) hashCode() 
Answer: b 
--------
Which of these exceptions is thrown by compareTo() method defined in double wrapper? 
a) IOException 
b) SystemException 
c) CastException 
d) ClassCastException 
Answer: d 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
            Double i = new Double(257.5);  
            Double x = i.MAX_VALUE;
            System.out.print(x);
        }
    }
a) 0
b) 1.7976931348623157E308 
c) 1.7976931348623157E30 
d) None of the mentioned 
Answer: b 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
            Double i = new Double(257.5);  
            Double x = i.MIN_VALUE;
            System.out.print(x);
        }
    }
a) 0 
b) 4.9E-324 
c) 1.7976931348623157E308 
d) None of the mentioned 
Answer: b 
--------
What is the output of this program?
    class Output {
         public static void main(String args[]) {
             Integer i = new Integer(257);  
             byte x = i.byteValue();
             System.out.print(x);
        }
    }
a) 0 
b) 1 
c) 256 
d) 257 
Answer: b 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
	    Double i = new Double(257.578123456789);  
            float x = i.floatValue();
            System.out.print(x);
        }
    }
a) 0
b) 257.0 
c) 257.57812 
d) 257.578123456789 
Answer: c 
--------
Which of these is necessary condition for automatic type conversion in Java? 
a) The destination type is smaller than source type. 
b) The destination type is larger than source type. 
c) The destination type can be larger or smaller than source type. 
d) None of the mentioned 
Answer:b 
--------
What is the prototype of the default constructor of this class? 
    public class prototype { } 
a) prototype( ) 
b) prototype(void) 
c) public prototype(void) 
d) public prototype( ) 
Answer: d 
--------
What is the error in this code? 
    byte b = 50; 
    b = b * 50; 
a) b can not contain value 100, limited by its range. 
b) * operator has converted b * 50 into int, which can not be converted to byte without casting. 
c) b can not contain value 50. 
d) No error in this code 
Answer: b 
--------
If an expression contains double, int, float, long, then whole expression will promoted into which of these data types? 
a) long 
b) int 
c) double 
d) float 
Answer: c 
--------
What is Truncation is Java? 
a) Floating-point value assigned to an integer type. 
b) Integer value assigned to floating type. 
c) Floating-point value assigned to an Floating type. 
d) Integer value assigned to floating type. 
Answer: a 
--------
What is the output of this program?
    class char_increment {
        public static void main(String args[]) 
        {
            char c1 = 'D';
            char c2 = 84;
            c2++;
            c1++;
            System.out.println(c1 + " "  + c2);
        } 
    }
a) E U
b) U E 
c) V E 
d) U F 
Answer:a 
--------
What is the output of this program?
    class conversion {
        public static void main(String args[]) 
        {
            double a = 295.04;
            int  b = 300;
            byte c = (byte) a;
            byte d = (byte) b;
            System.out.println(c + " "  + d);
        } 
    }
a) 38 43 
b) 39 44 
c) 295 300 
d) 295.04 300 
Answer:b 
--------
What is the output of this program?
    class A {
        final public int calculate(int a, int b) { return 1; } 
    } 
    class B extends A { 
        public int calculate(int a, int b) { return 2; } 
    } 
     public class output {
        public static void main(String args[]) 
        { 
            B object = new B(); 
            System.out.print("b is " + b.calculate(0, 1));  
        } 
    }
a) b is : 2 
b) b is : 1 
c) Compilation Error. 
d) An exception is thrown at runtime. 
Answer:c 
--------
What is the output of this program?
    class main_arguments {
        public static void main(String [] args) 
        {
            String [][] argument = new String[2][2];
            int x;
            argument[0] = args;
            x = argument[0].length;
            for (int y = 0; y < x; y++) 
                System.out.print(" " + argument[0][y]);              
        }
    }
a) 1 1
b) 1 0 
c) 1 0 3 
d) 1 2 3 
Answer:d 
--------
What is the numerical range of a char in Java? 
a) -128 to 127 
b) 0 to 256 
c) 0 to 32767 
d) 0 to 65535 
Answer:d 
--------
Which of these coding types is used for data type characters in Java? 
a) ASCII 
b) ISO-LATIN-1 
c) UNICODE 
d) None of the mentioned 
Answer:c 
--------
Which of these values can a boolean variable contain? 
a) True & False 
b) 0 & 1 
c) Any integer value 
d) true 
Answer:a 
--------
Which of these occupy first  0 to 127 in Unicode character set used for characters in Java? 
a) ASCII 
b) ISO-LATIN-1 
c) None of the mentioned 
d) ASCII and ISO-LATIN1 
Answer:d 
--------
Which one is a valid declaration of a boolean? 
a) boolean b1 = 1; 
b) boolean b2 = 'false'; 
c) boolean b3 = false; 
d) boolean b4 = 'true' 
Answer:c 
--------
What is the output of this program?
    class array_output {
        public static void main(String args[]) 
        {    
            char array_variable [] = new char[10];
	    for (int i = 0; i < 10; ++i) {
                array_variable[i] = 'i';
                System.out.print(array_variable[i] + "" );
                i++;
            }
        } 
    }
a) i i i i i
b) 0 1 2 3 4 
c) i j k l m 
d) None of the mentioned 
Answer:a 
--------
What is the output of this program?
    class mainclass {
        public static void main(String args[]) 
        {
            char a = 'A';
            a++;
	    System.out.print((int)a);
        } 
    }
a) 66 
b) 67 
c) 65 
d) 64 
Answer:a 
--------
What is the output of this program?
    class mainclass {
        public static void main(String args[]) 
        {
            boolean var1 = true;
	    boolean var2 = false;
	    if (var1)
	        System.out.println(var1);
	    else
	        System.out.println(var2);
       } 
    }
a) 0 
b) 1 
c) true 
d) false 
Answer:c 
--------
What is the output of this program?
    class booloperators {
        public static void main(String args[]) 
        {
            boolean var1 = true;
	    boolean var2 = false;
	    System.out.println((var2 & var2));
        } 
    }
a) 0
b) 1 
c) true 
d) false 
Answer:d 
--------
Which of these method of class String is used to extract more than one character at a time a String object? 
a) getchars() 
b) GetChars() 
c) Getchars() 
d) getChars() 
Answer: d 
--------
Which of these methods is an alternative to getChars() that stores the characters in an array of bytes? 
a) getBytes() 
b) GetByte() 
c) giveByte() 
d) Give Bytes() 
Answer: a 
--------
Which of these method of class String is used to obtain length of String object? 
a) get() 
b) Sizeof() 
c) lengthof() 
d) length() 
Answer: d 
--------
Which of these method of class String is used to extract a single character from a String object? 
a) CHARAT() 
b) chatat() 
c) charAt() 
d) ChatAt() 
Answer: c 
--------
Which of these methods can be used to convert all characters in a String into a character array? 
a) charAt() 
b) getChars() 
c) toCharArray() 
d) All of the mentioned 
Answer: d 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
           String c = "Hello i love java";
           int start = 2;
           int end = 9;
           char s[]=new char[end-start];
           c.getChars(start,end,s,0);
           System.out.println(s);
        }
    }
a) Hello, i love java
b) i love ja 
c) lo i lo 
d) llo i l 
Answer:d 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        {
            String a = "hello i love java";
            System.out.println(a.indexOf('i')+" "+a.indexOf('o') +" "+a.lastIndexOf('i')+" "+a.lastIndexOf('o'));
        }
    }
a) 6 4 6 9 
b) 5 4 5 9 
c) 7 8 8 9 
d) 4 3 6 9 
Answer:a 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        {
            char c[]={'a', '1', 'b' ,' ' ,'A' , '0'};
            for (int i = 0; i < 5; ++i)
            {
                   if(Character.isDigit(c[i]))
                       System.out.println(c[i]+" is a digit");
                   if(Character.isWhitespace(c[i]))
                       System.out.println(c[i]+" is a Whitespace character");
                   if(Character.isUpperCase(c[i]))
                       System.out.println(c[i]+" is an Upper case Letter");
                   if(Character.isLowerCase(c[i]))
                       System.out.println(c[i]+" is a lower case Letter");
               i=i+3;
            }
        }
    }
a) a is a lower case Letter 
    is White space character 
b) b is a lower case Letter 
    is White space character 
c) a is a lower case Letter 
    A is a upper case Letter 
d) a is a lower case Letter 
    0 is a digit 
Answer: d 
--------
Which of these methods of Character wrapper can be used to obtain the char value contained in Character object. 
a) get() 
b) getVhar() 
c) getValue() 
d) getCharacter() 
Answer: c 
--------
Which of the following constant are defined in Character wrapper? 
a) MAX_RADIX 
b) MAX_VALUE 
c) TYPE 
d) All of the mentioned 
Answer: d 
--------
Which of these is a super class of Character wrapper? 
a) Long 
b) Digits 
c) Float 
d) Number 
Answer: d 
--------
Which of these methods is used to know whether a given Character object is part of Java's indentifiers? 
a) isIdentifier() 
b) isJavaIdentifier() 
c) isJavaIdentifierPart() 
d) None of the mentioned 
Answer: c 
--------
Which of these coding techniques is used by method isDefined()? 
a) Latin 
b) ASCII 
c) ANSI 
d) UNICODE 
Answer: d 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
            int a = Character.MAX_VALUE;
            System.out.print((char)a);
        }
    }
a) 
b) > 
c) ? 
d) $ 
Answer: c 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
            int a = Character.MIN_VALUE;
            System.out.print((char)a);
        }
    }
a) <
b) !
c) @
d) Space
Answer: b 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
	    char a = (char) 98;
            a = Character.toUpperCase(a);
            System.out.print(a);
        }
    }
a) b
b) c 
c) B 
d) C 
Answer: c 
--------
What is the stored in the object obj in following lines of code? 
    box obj; 
a) Memory address of allocated memory of object. 
b) NULL 
c) Any arbitrary pointer 
d) Garbage 
Answer: b 
--------
Which of these keywords is used to make a class? 
a) class 
b) struct 
c) int 
d) None of the mentioned 
Answer:a 
--------
Which of the following is a valid declaration of an object of class Box? 
a) Box obj = new Box(); 
b) Box obj = new Box; 
c) obj = new Box(); 
d) new Box obj; 
Answer: a 
--------
Which of these operators is used to allocate memory for an object? 
a) malloc 
b) alloc 
c) new 
d) give 
Answer: c 
--------
Which of these statement is incorrect? 
a) Every class must contain a main() method. 
b) Applets do not require a main() method at all. 
c) There can be only one main() method in a program. 
d) main() method must be made public. 
Answer: a 
--------
What is the output of this program?
    class main_class {
        public static void main(String args[])
        {
            int x = 9;
            if (x == 9) { 
                int x = 8;
                System.out.println(x);
            }
        } 
    }
a) 9
b) 8 
c) Compilation error 
d) Runtime error 
Answer: c 
--------
Which of the following statements is correct? 
a) Public method is accessible to all other classes in the hierarchy 
b) Public method is accessible only to subclasses of its parent class 
c) Public method can only be called by object of its class. 
d) Public method can be accessed by calling object of the public class. 
Answer: a 
--------
What is the output of this program?
    class box {
        int width;
        int height;
        int length;
    } 
    class mainclass {
        public static void main(String args[]) 
        {        
             box obj = new box();
             obj.width = 10;
             obj.height = 2;
             obj.length = 10;
             int y = obj.width * obj.height * obj.length; 
             System.out.print(y);
        } 
    }
a) 12 
b) 200 
c) 400 
d) 100 
Answer: b 
--------
What is the output of this program?
    class box {
        int width;
        int height;
        int length;
    } 
    class mainclass {
        public static void main(String args[]) 
        {        
            box obj1 = new box();
            box obj2 = new box();
            obj1.height = 1;
            obj1.length = 2;
            obj1.width = 1;
            obj2 = obj1;
            System.out.println(obj2.height);
        } 
    }
a) 1
b) 2 
c) Runtime error 
d) Garbage value 
Answer: a 
--------
Which of these is an incorrect form of using method max() to obtain maximum element? 
a) max(Collection c) 
b) max(Collection c, Comparator comp) 
c) max(Comparator comp) 
d) max(List c) 
Answer: c 
--------
Which of these methods sets every element of a List to a specified object? 
a) set() 
b) fill() 
c) Complete() 
d) add() 
Answer: b 
--------
Which of these methods can randomize all elements in a list? 
a) rand() 
b) randomize() 
c) shuffle() 
d) ambigous() 
Answer: c 
--------
Which of these methods can convert an object into a List? 
a) SetList() 
b) ConvertList() 
c) singletonList() 
d) CopyList() 
Answer: c 
--------
Which of these is true about unmodifiableCollection() method? 
a) unmodifiableCollection() returns a collection that cannot be modified. 
b) unmodifiableCollection() method is available only for List and Set. 
c) unmodifiableCollection() is defined in Collection class. 
d) None of the mentioned. 
Answer: b 
--------
Which of these is static variable defined in Collections? 
a) EMPTY_SET 
b) EMPTY_LIST 
c) EMPTY_MAP 
d) All of the mentioned 
Answer: d 
--------
What is the output of this program?
    import java.util.*;
    class Collection_Algos {
        public static void main(String args[]) {
            LinkedList list = new LinkedList();
            list.add(new Integer(2));
            list.add(new Integer(8));
            list.add(new Integer(5));
            list.add(new Integer(1));
            Iterator i = list.iterator();
	    while(i.hasNext())
	        System.out.print(i.next() + " ");
        }
    }
a) 2 8 5 1
b) 1 5 8 2 
c) 2 
d) 2 1 8 5 
Answer: a 
--------
What is the output of this program?
    import java.util.*;
    class Collection_Algos {
        public static void main(String args[]) {
            LinkedList list = new LinkedList();
            list.add(new Integer(2));
            list.add(new Integer(8));
            list.add(new Integer(5));
            list.add(new Integer(1));
            Iterator i = list.iterator();
            Collections.reverse(list);
	    while(i.hasNext())
	        System.out.print(i.next() + " ");
        }
    }
a) 2 8 5 1 
b) 1 5 8 2 
c) 2 
d) 2 1 8 5 
Answer: b 
--------
What is the output of this program?
    import java.util.*;
    class Collection_Algos {
        public static void main(String args[]) {
            LinkedList list = new LinkedList();
            list.add(new Integer(2));
            list.add(new Integer(8));
            list.add(new Integer(5));
            list.add(new Integer(1));
            Iterator i = list.iterator();
            Collections.reverse(list);
	    Collections.sort(list);
            while(i.hasNext())
	        System.out.print(i.next() + " ");
        }
    }
a) 2 8 5 1
b) 1 5 8 2 
c) 1 2 5 8 
d) 2 1 8 5 
Answer: c 
--------
Which of these packages contain all the collection classes? 
a) java.lang 
b) java.util 
c) java.net 
d) java.awt 
Answer: b 
--------
Which of these classes is not part of Java's collection framework? 
a) Maps 
b) Array 
c) Stack 
d) Queue 
Answer: d 
--------
Which of these interface is not a part of Java's collection framework? 
a) List 
b) Set 
c) SortedMap 
d) SortedList 
Answer: d 
--------
Which of these methods deletes all the elements from invoking collection? 
a) clear() 
b) reset() 
c) delete() 
d) refresh() 
Answer: a 
--------
What is Collection in Java? 
a) A group of objects 
b) A group of  classes 
c) A group of interfaces 
d) None of the mentioned 
Answer: a 
--------
What is the output of this program?
    import java.util.*;
    class Array {
        public static void main(String args[]) {
            int array[] = new int [5];
            for (int i = 5; i > 0; i--)
                array[5-i] = i;
            Arrays.fill(array, 1, 4, 8);
            for (int i = 0; i < 5 ; i++)
                System.out.print(array[i]);
        }
    }
a) 12885
b) 12845 
c) 58881 
d) 54881 
Answer: c 
--------
What is the output of this program?
    import java.util.*;
    class vector {
        public static void main(String args[]) {
            Vector obj = new Vector(4,2);
            obj.addElement(new Integer(3));
            obj.addElement(new Integer(2));
            obj.addElement(new Integer(5));
            obj.removeAll(obj);
            System.out.println(obj.isEmpty());
        }
    }
a) 0 
b) 1 
c) true 
d) false 
Answer: c 
--------
What is the output of this program?
    import java.util.*;
    class stack {
        public static void main(String args[]) {
            Stack obj = new Stack();
            obj.push(new Integer(3));
            obj.push(new Integer(2));
            obj.pop();
            obj.push(new Integer(5));
     	    System.out.println(obj);
        }
    }
a) [3, 5]
b) [3, 2]
c) [3, 2, 5]
d) [3, 5, 2]
Answer: a 
--------
What is the output of this program?
    import java.util.*;
    class hashtable {
        public static void main(String args[]) {
            Hashtable obj = new Hashtable();
            obj.put("A", new Integer(3));
            obj.put("B", new Integer(2));
            obj.put("C", new Integer(8));
            obj.remove(new String("A"));
            System.out.print(obj);
        }
    }
a) {C=8, B=2}
b) [C=8, B=2]
c) {A=3, C=8, B=2} 
d) [A=3, C=8, B=2]
Answer: b 
--------
Which of these interface declares core method that all collections will have? 
a) set 
b) EventListner 
c) Comparator 
d) Collection 
Answer: d 
--------
Which of these interface handle sequences? 
a) Set 
b) List 
c) Comparator 
d) Collection 
Answer: b 
--------
Which of these interface is not a part of Java's collection framework? 
a) List 
b) Set 
c) SortedMap 
d) SortedList 
Answer: d 
--------
Which of these interface must contain a unique element? 
a) Set 
b) List 
c) Array 
d) Collection 
Answer: a 
--------
Which of these is Basic interface that all other interface inherits? 
a) Set 
b) Array 
c) List 
d) Collection 
Answer: d 
--------
What is the output of this program?
    import java.util.*;
    class Maps {
        public static void main(String args[]) {
            TreeMap obj = new TreeMap();
            obj.put("A", new Integer(1));
            obj.put("B", new Integer(2));
            obj.put("C", new Integer(3));
            System.out.println(obj.entrySet());
        }
    }
a) [A, B, C]
b) [1, 2, 3]
c) {A=1, B=2, C=3} 
d) [A=1, B=2, C=3]
Answer: d 
--------
What is the output of this program?
    import java.util.*;
    class vector {
        public static void main(String args[]) {
            Vector obj = new Vector(4,2);
            obj.addElement(new Integer(3));
            obj.addElement(new Integer(2));
            obj.addElement(new Integer(5));
            obj.removeAll(obj);
            System.out.println(obj.isEmpty());
        }
    }
a) 0 
b) 1 
c) true 
d) false 
Answer: c 
--------
What is the output of this program?
    import java.util.*;
    class Array {
        public static void main(String args[]) {
            int array[] = new int [5];
            for (int i = 5; i > 0; i--)
                array[5 - i] = i;
            Arrays.sort(array);
            for (int i = 0; i < 5; ++i)
            	System.out.print(array[i]);;
        }
    }
a) 12345 
b) 54321 
c) 1234 
d) 5432 
Answer: b 
--------
What is the output of this program?
    import java.util.*;
    class vector {
        public static void main(String args[]) {
            Vector obj = new Vector(4,2);
            obj.addElement(new Integer(3));
            obj.addElement(new Integer(2));
            obj.addElement(new Integer(5));
            obj.removeAll(obj);
            System.out.println(obj.isEmpty());
        }
    }
a) 0
b) 1 
c) true 
d) false 
Answer: c 
--------
Which of these method is given parameter via command line arguments? 
a) main(). 
b) recursive() method. 
c) Any method. 
d) System defined methods. 
Answer: a 
--------
Which of these data types is used to store command line arguments? 
a) Array 
b) Stack 
c) String 
d) Integer 
Answer: c 
--------
How many arguments can be passed to main()? 
a) Infinite 
b) Only 1 
c) System Dependent 
d) None of the mentioned 
Answer: a 
--------
Which of these is a correct statement about args in this line of code? 
public static viod main(String args[]) 
a) args is a String. 
b) args is a Character. 
c) args is an array of String. 
d) args in an array of Character. 
Answer: c 
--------
Can command line arguments be converted into int automatically if required? 
a) Yes 
b) No 
c) Compiler Dependent 
d) Only ASCII characters can be converted. 
Answer: b 
--------
What is the output of this program, Command line execution is done as - "java Output This is a command Line"?
    class Output {
        public static void main(String args[]) {
            System.out.print("args[0]");
        }
    }
a) java
b) Oupput 
c) This 
d) is 
Answer: d 
--------
What is the output of this program, Command line exceution is done as - "java Output This is a command Line"?
    class Output {
        public static void main(String args[]) {
            System.out.print("args[3]");
        }
    }
a) java 
b) is 
c) This 
d) command 
Answer: d 
--------
What is the output of this program, Command line execution is done as - "java Output This is a command Line"?
    class Output {
        public static void main(String args[]) {
            System.out.print("args");
        }
    }
a) This 
b) java Output This is a command Line 
c) This is a command Line 
d) Compilation Error 
Answer: c 
--------
What is the output of this program, Command line execution is done as - "java Output command Line 10 A b 4 N"?
    class Output {
        public static void main(String args[]) {
            System.out.print("(int)args[2] * 2");
        }
    }
a) java
b) 10 
c) 20 
d) b 
Answer: c 
--------
Which of these events is generated when the size os an event is changed? 
a) ComponentEvent 
b) ContainerEvent 
c) FocusEvent 
d) InputEvent 
Answer: a 
--------
Which of these events is generated when the component is added or removed? 
a) ComponentEvent 
b) ContainerEvent 
c) FocusEvent 
d) InputEvent 
Answer: b 
--------
Which of these methods can be used to obtain the reference to the container that generated a ContainerEvent? 
a) getContainer() 
b) getContainerCommand() 
c) getActionEvent() 
d) getContainerEvent() 
Answer: d 
--------
Which of these methods can be used to get reference to a component that was removed from a container? 
a) getComponent() 
b) getchild() 
c) getContainerComponent() 
d) getComponentChild() 
Answer: d 
--------
Which of these events is generated when computer gains or losses input focus? 
a) ComponentEvent 
b) ContainerEvent 
c) FocusEvent 
d) InputEvent 
Answer: c 
--------
FocusEvent is subclass of which of these classes? 
a) ComponentEvent 
b) ContainerEvent 
c) ItemEvent 
d) InputEvent 
Answer: a 
--------
Which of these methods can be used to know the type of focus change? 
a) typeFocus() 
b) typeEventFocus() 
c) isTemporary() 
d) isPermanent() 
Answer: c 
--------
What is the return type of Constructors? 
a) int 
b) float 
c) void 
d) None of the mentioned 
Answer: d 
--------
Which keyword is used by method to refer to the object that invoked it? 
a) import 
b) catch 
c) abstract 
d) this 
Answer: d 
--------
Which of the following is a method having same name as that of its class? 
a) finalize 
b) delete 
c) class 
d) constructor 
Answer: d 
--------
Which operator is used by Java run time implementations to free the memory of an object when it is no longer needed? 
a) delete 
b) free 
c) new 
d) None of the mentioned 
Answer: d 
--------
Which function is used to  perform some action when the object is to be destroyed? 
a) finalize() 
b) delete() 
c) main() 
d) None of the mentioned 
Answer: a 
--------
What is the output of this program?
    class box {
        int width;
        int height;
        int length;
        int volume;
        box() {
            width = 5;
            height = 5;
            length = 6;
        }
        void volume() {
             volume = width*height*length;
        } 
    }    
    class constructor_output {
        public static void main(String args[])
        {
            box obj = new box();
            obj.volume();
            System.out.println(obj.volume);
        }
   }
a) 100
b) 150 
c) 200 
d) 250 
Answer: b 
--------
What is the output of this program?
    class equality {
        int x;
        int y;
        boolean isequal() {
            return(x == y);  
        } 
    }    
    class Output {
        public static void main(String args[])
        {
            equality obj = new equality();
            obj.x = 5;
            obj.y = 5;
            System.out.println(obj.isequal);        } 
    }
a) false 
b) true 
c) 0 
d) 1 
Answer: b 
--------
What is the output of this program?
    class box {
        int width;
        int height;
        int length;
        int volume;
        void finalize() {
            volume = width*height*length;
            System.out.println(volume);
        }
        protected void volume() {
            volume = width*height*length;
            System.out.println(volume);
       } 
    }    
    class Output { 
        public static void main(String args[])
        {
            box obj = new box();
            obj.volume();
        } 
    }
a) 150
b) 200 
c) Runtime error 
d) Compilation error 
Answer: a 
--------
Which of the folowing stements are incorrect? 
a) Default constructor is called at the time of declaration of the object if a constructor has not been defined. 
b) Constructor can be parameterized. 
c) finalize() method is called when a object goes out of scope and is no longer needed. 
d) finalize() method must be declared protected. 
Answer: c 
--------
Which of these selection statements test only for equality? 
a) if 
b) switch 
c) if & switch 
d) None of the mentioned 
Answer: b 
--------
Which of these are selection statements in Java? 
a) if() 
b) for() 
c) continue 
d) break 
Answer:a 
--------
Which of the following loops will execute the body of loop even when condition controlling the loop is initially false? 
a) do-while 
b) while 
c) for 
d) None of the mentioned 
Answer: a 
--------
Which of these jump statements can skip processing remainder of code in its body for a particular iteration? 
a) break 
b) return 
c) exit 
d) continue 
Answer: d 
--------
Which of these statement is correct? 
a) switch statement is more efficient than a set of nested ifs. 
b) two case constants in the same switch can have identical values. 
c) switch statement can only test for equality, whereas if statement can evaluate any type of boolean expression. 
d) it is possible to create a nested switch statements. 
Answer: b 
--------
What is the output of this program?
    class selection_statements {
        public static void main(String args[])
        {
            int var1 = 5; 
            int var2 = 6;
            if ((var2 = 1) == var1)
                System.out.print(var2);
            else 
                System.out.print(++var2);
        } 
    }
a) 1
b) 2 
c) 3 
d) 4 
Answer:b 
--------
What is the output of this program?
    class comma_operator {
        public static void main(String args[]) 
        {    
             int sum = 0;
             for (int i = 0, j = 0; i < 5 & j < 5; ++i, j = i + 1)
                 sum += i;
 	     System.out.println(sum);
        } 
    }
a) 5 
b) 6 
c) 14 
d) compilation error 
Answer: b 
--------
What is the output of this program?
    class jump_statments {
        public static void main(String args[]) 
        {        
             int x = 2;
             int y = 0;
             for ( ; y < 10; ++y) {
                 if (y % x == 0) 
                     continue;  
                 else if (y == 8)
                      break;
                 else
                    System.out.print(y + " ");
             }
        } 
    }
a) 1 3 5 7 
b) 2 4 6 8 
c) 1 3 5 7 9 
d) 1 2 3 4 5 6 7 8 9 
Answer:c 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) 
        {    
             int x, y = 1;
             x = 10;
             if (x != 10 && x / 0 == 0)
                 System.out.println(y);
             else
                 System.out.println(++y);
        } 
    }
a) 1
b) 2 
c) Runtime error owing to division by zero in if condition. 
d) Unpredictable behavior of program. 
Answer: b 
--------
Which of these package is used for graphical user interface? 
a) java.applet 
b) java.awt 
c) java.awt.image 
d) java.io 
Answer: b 
--------
Which of these package is used for analyzing code during run-time? 
a) java.applet 
b) java.awt 
c) java.io 
d) java.lang.reflect 
Answer: d 
--------
Which of these package is used for handling security related issues in a program? 
a) java.security 
b) java.lang.security 
c) java.awt.image 
d) java.io.security 
Answer: a 
--------
Which of these class allows us to get real time data about private and protected member of a class? 
a) java.io 
b) GetInformation 
c) ReflectPermission 
d) MembersPermission 
Answer: c 
--------
Which of these package is used for invoking a method remotely? 
a) java.rmi 
b) java.awt 
c) java.util 
d) java.applet 
Answer: a 
--------
Which of these package is used for all the text related modifications? 
a) java.text 
b) java.awt 
c) java.lang.text 
d) java.text.mofify 
Answer: a 
--------
What is the output of this program?
    import java.lang.reflect.*;
    class Additional_packages {	 
         public static void main(String args[]) {
	     try {
	         Class c = Class.forName("java.awt.Dimension");
		 Constructor constructors[] = c.getConstructors();
		 for (int i = 0; i < constructors.length; i++)
		     System.out.println(constructors[i]);
		 }
	     catch (Exception e){
             System.out.print("Exception");
             }
        }
    }
a) Program prints all the constructors of 'java.awt.Dimension' package.
b) Program prints all the possible constructors of class 'Class'. 
c) Program prints "Exception" 
d) Runtime Error 
Answer: a 
--------
What is the output of this program?
    import java.lang.reflect.*;
    class Additional_packages {	 
         public static void main(String args[]) {
	     try {
	         Class c = Class.forName("java.awt.Dimension");
		 Field fields[] = c.getFields();
		 for (int i = 0; i < fields.length; i++)
		     System.out.println(fields[i]);
		 }
	     catch (Exception e){
             System.out.print("Exception");
             }
        }
    }
a) Program prints all the constructors of 'java.awt.Dimension' package. 
b) Program prints all the methods of 'java.awt.Dimension' package. 
c) Program prints all the data members of 'java.awt.Dimension' package. 
d) program prints all the methods and data member of 'java.awt.Dimension' package. 
Answer: c 
--------
What is the length of the application box made by this program?
    import java.awt.*;
    import java.applet.*;
    public class myapplet extends Applet {
        Graphic g;
        g.drawString("A Simple Applet",20,20);    
    }
a) 20
b) Default value 
c) Compilation Error 
d) Runtime Error 
Answer: c 
--------
Which of these classes is used to define exceptions? 
a) Exception 
b) Trowable 
c) Abstract 
d) System 
Answer: a 
--------
Which of these methods return description of an exception? 
a) getException() 
b) getMessage() 
c) obtainDescription() 
d) obtainException() 
Answer: b 
--------
Which of these methods is used to print stack trace? 
a) obtainStackTrace() 
b) printStackTrace() 
c) getStackTrace() 
d) displayStackTrace() 
Answer: b 
--------
Which of these methods return localized description of an exception? 
a) getLocalizedMessage() 
b) getMessage() 
c) obtainLocalizedMessage() 
d) printLocalizedMessage() 
Answer: a 
--------
Which of these classes is super class of Exception class? 
a) Throwable 
b) System 
c) RunTime 
d) Class 
Answer: a 
--------
What is the output of this program?
    class Myexception extends Exception {
	int detail;
        Myexception(int a) {
            detail = a;
	public String toString() {
	    return "detail";
    }
    class Output {
        static void compute (int a) throws Myexception {
	     throw new Myexception(a);	 
	public static void main(String args[]) {
            try {
                compute(3);
            }
           catch(Myexception e) {
               System.out.print("Exception");
           } 
        }
    }
a) 3
b) Exception 
c) Runtime Error 
d) Compilation Error 
Answer: b 
--------
What is the output of this program?
    class Myexception extends Exception {
	int detail;
        Myexception(int a) {
        detail = a;
	public String toString() {
	    return "detail";
    }
    class Output {
        static void compute (int a) throws Myexception {
	     throw new Myexception(a);	 
	public static void main(String args[]) {
            try {
                compute(3);
            }
           catch(DevideByZeroException e) {
               System.out.print("Exception");
           } 
        }
    }
a) 3 
b) Exception 
c) Runtime Error 
d) Compilation Error 
Answer: c 
--------
What is the output of this program?
    class exception_handling {
        public static void main(String args[]) {
            try {
                throw new NullPointerException ("Hello");
                System.out.print("A");
            }
            catch(ArithmeticException e) {
        	System.out.print("B");        	
            }
        }
    }
a) A 
b) B 
c) Compilation Error 
d) Runtime Error 
Answer: d 
--------
What is the output of this program?
    class Myexception extends Exception {
	int detail;
        Myexception(int a) {
        detail = a;
	public String toString() {
	    return "detail";
    }
    class Output {
        static void compute (int a) throws Myexception {
	     throw new Myexception(a);	 
	public static void main(String args[]) {
            try {
                compute(3);
            }
           catch(Exception e) {
               System.out.print("Exception");
           } 
        }
    }
a) 3
b) Exception 
c) Runtime Error 
d) Compilation Error 
Answer: b 
--------
Which of these keywords are used to implement synchronization? 
a) sunchronize 
b) syn 
c) synch 
d) synchronized 
Answer: d 
--------
Which of these method is used to avoid polling in Java? 
a) wait() 
b) notify() 
c) notifyAll() 
d) All of the mentioned 
Answer: d 
--------
Which of these method is used to tell the calling thread to give up monitor and go to sleep until some other thread enters the same monitor? 
a) wait() 
b) notify() 
c) notifyAll() 
d) sleep() 
Answer: a 
--------
Which of these method wakes up the first thread that called wait()? 
a) wake() 
b) notify() 
c) start() 
d) notifyAll() 
Answer: b 
--------
Which of these method wakes up all the threads? 
a) wakeAll() 
b) notify() 
c) start() 
d) notifyAll() 
Answer: d 
--------
What is synchronization in reference to a thread? 
a) Its a process of handling situations when two or more threads need access to a shared resource. 
b) Its a process by which many thread are able to access same shared resource simultaneously. 
c) Its a process by which a method is able to access many different threads simultaneously. 
d) Its a method that allow to many threads to access any information the require. 
Answer: a 
--------
What is the output of this program?
    class newthread extends Thread {
	Thread t;
	String name;
	newthread(String threadname) {
	    name = threadname;
	    t = new Thread(this,name);
	    t.start();
	public void run() {
        }
    }
    class multithreaded_programing {
        public static void main(String args[]) {
	    newthread obj1 = 	 new newthread("one");
	    newthread obj2 =	 new newthread("two");
            try {
                obj1.t.wait();	
                System.out.print(obj1.t.isAlive());
            }
            catch(Exception e) {
	    System.out.print("Main thread interrupted");
            }
        }
    }
a) true
b) false 
c) Main thread interrupted 
d) None of the mentioned 
Answer: c 
--------
What is the output of this program?
    class newthread extends Thread {
	Thread t;
	String name;
	newthread(String threadname) {
	    name = threadname;
	    t = new Thread(this,name);
	    t.start();
	public void run() {
        }
    }
    class multithreaded_programing {
        public static void main(String args[]) {
	    newthread obj1 = 	 new newthread("one");
	    newthread obj2 =	 new newthread("two");
            try {
                Thread.sleep(1000);	
                System.out.print(obj1.t.isAlive());
            }
            catch(InterruptedException e) {
	    System.out.print("Main thread interrupted");
            }
        }
    }
a) true 
b) false 
c) Main thread interrupted 
d) None of the mentioned 
Answer: b 
--------
What is the output of this program?
    class newthread extends Thread {
	Thread t;
	String name;
	newthread(String threadname) {
	    name = threadname;
	    t = new Thread(this,name);
	    t.start();
	public void run() {
        }
    }
    class multithreaded_programing {
        public static void main(String args[]) {
	    newthread obj1 = 	 new newthread("one");
	    newthread obj2 =	 new newthread("two");
            try {
                 System.out.print(obj1.t.equals(obj2.t));
            }
            catch(Exception e) {
	    System.out.print("Main thread interrupted");
            }
        }
    }
a) true
b) false 
c) Main thread interrupted 
d) None of the mentioned 
Answer: b 
--------
Which of these is a super class of wrappers Double and Float? 
a) Long 
b) Digits 
c) Float 
d) Number 
Answer: d 
--------
Which of the following methods return the value as a double? 
a) doubleValue() 
b) converDouble() 
c) getDouble() 
d) getDoubleValue() 
Answer: a 
--------
Which of these methods can be used to check whether the given value is a number or not? 
a) isNaN() 
b) isNumber() 
c) checkNaN() 
d) checkNumber() 
Answer: a 
--------
Which of these method of Double wrapper can be used to check weather a given value is infinite or not? 
a) Infinite() 
b) isInfinite() 
c) checkInfinite() 
d) None of the mentioned 
Answer: b 
--------
Which of these exceptions is thrown by compareTo() method defined in double wrapper? 
a) IOException 
b) SystemException 
c) CastException 
d) ClassCastException 
Answer: d 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
            Double i = new Double(257.5);  
            boolean x = i.isNaN();
            System.out.print(x);
        }
    }
a) true
b) false 
c) 0 
d) 1 
Answer: b 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
            Integer i = new Integer(257);  
            byte x = i.byteValue();
            System.out.print(x);
        }
    }
a) 0 
b) 1 
c) 256 
d) 257 
Answer: b 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
            Double i = new Double(257.578);  
            int x = i.intValue();
            System.out.print(x);
        }
    }
a) 0 
b) 1 
c) 256 
d) 257 
Answer: d 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
	    Double i = new Double(257.578123456789);  
            float x = i.floatValue();
            System.out.print(x);
        }
    }
a) 0
b) 257.0 
c) 257.57812 
d) 257.578123456789 
Answer: c 
--------
Which of these packages contains all the classes and methods required for even handling in Java? 
a) java.applet 
b) java.awt 
c) java.event 
d) java.awt.event 
Answer: d 
--------
What is an event in delegation event model used by Java programming language? 
a) An event is an object that describes a state change in a source. 
b) An event is an object that describes a state change in processing. 
c) An event is an object that describes any change by the user and system. 
d) An event is a class used for defining object, to create events. 
Answer: a 
--------
Which of these methods are used to register a keyboard event listener? 
a) KeyListener() 
b) addKistener() 
c) addKeyListener() 
d) eventKeyboardListener() 
Answer: c 
--------
Which of these methods are used to register a mouse motion listener? 
a) addMouse() 
b) addMouseListener() 
c) addMouseMotionListner() 
d) eventMouseMotionListener() 
Answer: b 
--------
Event class is defined in which of these libraries? 
a) java.io 
b) java.lang 
c) java.net 
d) java.util 
Answer: d 
--------
Which of these methods can be used to determine the type of event? 
a) getID() 
b) getSource() 
c) getEvent() 
d) getEventObject() 
Answer: a 
--------
Which of these class is super class of all the events? 
a) EventObject 
b) EventClass 
c) ActionEvent 
d) ItemEvent 
Answer: c 
--------
Which of these packages contains all the event handling interfaces? 
a) java.lang 
b) java.awt 
c) java.awt.event 
d) java.event 
Answer: c 
--------
Which of these interfaces handles the event when a component is added to a container? 
a) ComponentListener 
b) ContainerListener 
c) FocusListener 
d) InputListener 
Answer: b 
--------
Which of these interfaces define a method actionPerformed()? 
a) ComponentListener 
b) ContainerListener 
c) ActionListener 
d) InputListener 
Answer: c 
--------
Which of these interfaces define four methods? 
a) ComponentListener 
b) ContainerListener 
c) ActionListener 
d) InputListener 
Answer: d 
--------
Which of these methods will respond when you click any button by mouse? 
a) mouseClicked() 
b) mouseEntered() 
c) mousePressed() 
d) All of the mentioned 
Answer: d 
--------
Which of these methods will be invoked if a character is entered? 
a) keyPressed() 
b) keyReleased() 
c) keyTyped() 
d) keyEntered() 
Answer: c 
--------
Which of these methods is defined in MouseMotionAdapter class? 
a) mouseDragged() 
b) mousePressed() 
c) mouseReleased() 
d) mouseClicked() 
Answer: d 
--------
Which of these is a super class of all exceptional type classes? 
a) String 
b) RuntimeExceptions 
c) Throwable 
d) Cachable 
Answer: c 
--------
Which of these class is related to all the exceptions that can be caught by using catch? 
a) Error 
b) Exception 
c) RuntimeExecption 
d) All of the mentioned 
Answer: b 
--------
Which of these class is related to all the exceptions that cannot be caught? 
a) Error 
b) Exception 
c) RuntimeExecption 
d) All of the mentioned 
Answer: a 
--------
Which of these handles the exception when no catch is used? 
a) Default handler 
b) finally 
c) throw handler 
d) Java run time system 
Answer: a 
--------
Which of these keywords is used to manually throw an exception? 
a) try 
b) finally 
c) throw 
d) catch 
Answer: c 
--------
What is the output of this program?
    class exception_handling {
        public static void main(String args[]) {
            try {
                System.out.print("Hello" + " " + 1 / 0);
            }
            finally {
        	System.out.print("World");        	
            }
        }
    }
a) Hello
b) World 
c) Compilation Error 
d) First Exception then World 
Answer: d 
--------
What is the output of this program?
    class exception_handling {
        public static void main(String args[]) {
            try {
                int a, b;
                b = 0;
                a = 5 / b;
                System.out.print("A");
            }
            catch(ArithmeticException e) {
        	System.out.print("B");        	
            }
        }
    }
a) A 
b) B 
c) Compilation Error 
d) Runtime Error 
Answer: b 
--------
What is the output of this program?
    class exception_handling {
        public static void main(String args[]) {
            try {
                int a[] = {1, 2,3 , 4, 5};
                for (int i = 0; i < 7; ++i) 
                    System.out.print(a[i]);
            }
            catch(ArrayIndexOutOfBoundsException e) {
        	System.out.print("0");        	
            }
        }
    }
a) 12345 
b) 123450 
c) 1234500 
d) Compilation Error 
Answer: c 
--------
When does Exceptions in Java arises in code sequence? 
a) Run Time 
b) Compilation Time 
c) Can Occur Any Time 
d) None of the mentioned 
Answer: a 
--------
Which of these keywords is not a part of exception handling? 
a) try 
b) finally 
c) thrown 
d) catch 
Answer: c 
--------
Which of these keywords must be used to monitor for exceptions? 
a) try 
b) finally 
c) throw 
d) catch 
Answer: a 
--------
Which of these keywords must be used to handle the exception thrown by try block in some rational manner? 
a) try 
b) finally 
c) throw 
d) catch 
Answer: d 
--------
Which of these keywords is used to manually throw an exception? 
a) try 
b) finally 
c) throw 
d) catch 
Answer: c 
--------
What is the output of this program?
    class exception_handling {
        public static void main(String args[]) {
            try {
                System.out.print("Hello" + " " + 1 / 0);
            }
            catch(ArithmeticException e) {
        	System.out.print("World");        	
            }
        }
    }
a) Hello
b) World 
c) HelloWorld 
d) Hello World 
Answer: b 
--------
What is the output of this program?
    class exception_handling {
        public static void main(String args[]) {
            try {
                int a, b;
                b = 0;
                a = 5 / b;
                System.out.print("A");
            }
            catch(ArithmeticException e) {
        	System.out.print("B");        	
            }
        }
    }
a) A 
b) B 
c) Compilation Error 
d) Runtime Error 
Answer: b 
--------
What is the output of this program?
    class exception_handling {
        public static void main(String args[]) {
            try {
                int a, b;
                b = 0;
                a = 5 / b;
                System.out.print("A");
            }
            catch(ArithmeticException e) {
        	System.out.print("B");        	
            }
            finally {
    	        System.out.print("C");
            }
        }
    }
a) A 
b) B 
c) AC 
d) BC 
Answer: c 
--------
Which of these clause will be executed even if no exceptions are found? 
a) throws 
b) finally 
c) throw 
d) catch 
Answer: b 
--------
A single try block must be followed by which of these? 
a) finally 
b) catch 
c) finally & catch 
d) None of the mentioned 
Answer: c 
--------
Which of these packages contain all the Java's built in exceptions? 
a) java.io 
b) java.util 
c) java.lang 
d) java.net 
Answer: c 
--------
Which of these exceptions handles the divide by zero error? 
a) ArithmeticException 
b) MathException 
c) IllegalAccessException 
d) IllegarException 
Answer: a 
--------
Which of these exceptions will occur if we try to access the index of an array beyond its length? 
a) ArithmeticException 
b) ArrayException 
c) ArrayIndexException 
d) ArrayIndexOutOfBoundsException 
Answer: d 
--------
What is the output of this program?
    class exception_handling {
        public static void main(String args[]) {
            try {
                int a = args.length;
                int b = 10 / a;
                System.out.print(a);
            }
            catch (ArithmeticException e) {
                    System.out.println("1");
            }
        }
    }
a) 0
b) 1 
c) Compilation Error 
d) Runtime Error 
Note : Execution command line : $ java exception_handling 
Answer: b 
--------
What is the output of this program?
    class exception_handling {
        public static void main(String args[]) {
            try {
                throw new NullPointerException ("Hello");
                System.out.print("A");
            }
            catch(ArithmeticException e) {
        	System.out.print("B");        	
            }
        }
    }
a) A 
b) B 
c) Compilation Error 
d) Runtime Error 
Answer: d 
--------
What is the output of this program?
    class exception_handling {
            static void throwexception() throws ArithmeticException {        
                System.out.print("0");
                throw new ArithmeticException ("Exception");
            }
            public static void main(String args[]) {
            try {
                throwexception();
            }
            catch (ArithmeticException e) {
                    System.out.println("A");
            }
        }
    }
a) A 
b) 0 
c) 0A 
d) Exception 
Answer: c 
--------
What is the output of this program?
class exception_handling 
        {
            public static void main(String args[])
            {
                try 
                {
                    int a = 1;
                    int b = 10 / a;
                    try 
                    {
                         if (a == 1)
                             a = a / a - a;
                         if (a == 2) 
                         {
                             int c[] = {1};
                             c[8] = 9;
                         }
                    }
                    finally 
                    {
                        System.out.print("A");
                    }
                }
                catch (Exception e) 
                {
                        System.out.println("B");
                }
            }
        }
a) A
b) B 
c) AB 
d) BA 
Answer:a 
--------
What are generic methods? 
a) Generic methods are the methods defined in a generic class. 
b) Generic methods are the methods that extend generic class's methods. 
c) Generic methods are methods that introduce their own type parameters. 
d) Generic methods are methods that take void parameters. 
Answer: c 
--------
Which of these type parameters is used for a generic methods to return and accept any type of object? 
a) K 
b) N 
c) T 
d) V 
Answer: c 
--------
Which of these type parameters is used for a generic methods to return and accept a number? 
a) K 
b) N 
c) T 
d) V 
Answer: b 
--------
Which of these is an correct way of defining generic method? 
a) <T1, T2, ..., Tn> name(T1, T2, ..., Tn) { /* ... */ } 
b) public <T1, T2, ..., Tn> name<T1, T2, ..., Tn> { /* ... */ } 
c) class <T1, T2, ..., Tn> name[T1, T2, ..., Tn] { /* ... */ } 
d) <T1, T2, ..., Tn> name{T1, T2, ..., Tn} { /* ... */ } 
Answer: b 
--------
Which of the following is incorrect statement regarding the use of generics and parameterized types in Java? 
a) Generics provide type safety by shifting more type checking responsibilities to the compiler. 
b) Generics and parameterized types eliminate the need for down casts when using Java Collections. 
c) When designing your own collections class (say, a linked list), generics and parameterized types allow you to achieve type safety with just a single class definition as opposed to defining multiple classes. 
d) All of the mentioned 
Answer: c 
--------
Which of the following allows us to call generic methods as a normal method? 
a) Type Interface 
b) Interface 
c) Inner class 
d) All of the mentioned 
Answer: a 
--------
What is the output of this program?
    import java.util.*;
    public class genericstack <E> {
        Stack <E> stk = new Stack <E>();
	public void push(E obj) {
            stk.push(obj);
	public E pop() {
            E obj = stk.pop();
	    return obj;
    }
    class Output {
        public static void main(String args[]) {
            genericstack <String> gs = new genericstack<String>();
            gs.push("Hello");
            System.out.println(gs.pop());
        }
    }
a) H
b) Hello 
c) Runtime Error 
d) Compilation Error 
Answer: b 
--------
What is the output of this program?
    import java.util.*;
    public class genericstack <E> {
        Stack <E> stk = new Stack <E>();
	public void push(E obj) {
            stk.push(obj);
        public E pop() {
            E obj = stk.pop();
	    return obj;
    }
    class Output {
        public static void main(String args[]) {
            genericstack <Integer> gs = new genericstack<Integer>();
            gs.push(36);
            System.out.println(gs.pop());
        }
    }
a) 0 
b) 36 
c) Runtime Error 
d) Compilation Error 
Answer: b 
--------
What is the output of this program?
    import java.util.*;
    public class genericstack <E> {
        Stack <E> stk = new Stack <E>();
        public void push(E obj) {
            stk.push(obj);
	public E pop() {
            E obj = stk.pop();
	    return obj;
    }
    class Output {
        public static void main(String args[]) {
            genericstack <String> gs = new genericstack<String>();
            gs.push("Hello");
            System.out.print(gs.pop() + " ");
            genericstack <Integer> gs = new genericstack<Integer>();
            gs.push(36);
            System.out.println(gs.pop());
        }
    }
a) Error
b) Hello 
c) 36 
d) Hello 36 
Answer: d 
--------
Why are generics used? 
a) Generics make code more fast. 
b) Generics make code more optimised and readable. 
c) Generics add stability to your code by making more of your bugs detectable at compile time. 
d) Generics add stability to your code by making more of your bugs detectable at run time. 
Answer: c 
--------
Which of these type parameters is used for a generic class to return and accept any type of object? 
a) K 
b) N 
c) T 
d) V 
Answer: c 
--------
Which of these type parameters is used for a generic class to return and accept a number? 
a) K 
b) N 
c) T 
d) V 
Answer: b 
--------
Which of these is an correct way of defining generic class? 
a) class name(T1, T2, ..., Tn) { /* ... */ } 
b) class name<T1, T2, ..., Tn> { /* ... */ } 
c) class name[T1, T2, ..., Tn] { /* ... */ } 
d) class name{T1, T2, ..., Tn} { /* ... */ } 
Answer: b 
--------
Which of the following is incorrect statement regarding the use of generics and parameterized types in Java? 
a) Generics provide type safety by shifting more type checking responsibilities to the compiler. 
b) Generics and parameterized types eliminate the need for down casts when using Java Collections. 
c) When designing your own collections class (say, a linked list), generics and parameterized types allow you to achieve type safety with just a single class definition as opposed to defining multiple classes. 
d) All of the mentioned 
Answer: c 
--------
Which of the following reference types cannot be generic? 
a) Anonymous inner class 
b) Interface 
c) Inner class 
d) All of the mentioned 
Answer: a 
--------
What is the output of this program?
    import java.util.*;
    public class genericstack <E> {
        Stack <E> stk = new Stack <E>();
	public void push(E obj) {
            stk.push(obj);
	public E pop() {
            E obj = stk.pop();
	    return obj;
    }
    class Output {
        public static void main(String args[]) {
            genericstack <String> gs = new genericstack<String>();
            gs.push("Hello");
            System.out.println(gs.pop());
        }
    }
a) H
b) Hello 
c) Runtime Error 
d) Compilation Error 
Answer: b 
--------
What is the output of this program?
    import java.util.*;
    public class genericstack <E> {
        Stack <E> stk = new Stack <E>();
	public void push(E obj) {
            stk.push(obj);
	public E pop() {
            E obj = stk.pop();
	    return obj;
    }
    class Output {
        public static void main(String args[]) {
            genericstack <Integer> gs = new genericstack<Integer>();
            gs.push(36);
            System.out.println(gs.pop());
        }
    }
a) 0 
b) 36 
c) Runtime Error 
d) Compilation Error 
Answer: b 
--------
What is the output of this program?
    import java.util.*;
    public class genericstack <E> {
        Stack <E> stk = new Stack <E>();
	public void push(E obj) {
            stk.push(obj);
	public E pop() {
            E obj = stk.pop();
	    return obj;
    }
    class Output {
        public static void main(String args[]) {
            genericstack <String> gs = new genericstack<String>();
            gs.push("Hello");
            System.out.print(gs.pop() + " ");
            genericstack <Integer> gs = new genericstack<Integer>();
            gs.push(36);
            System.out.println(gs.pop());
        }
    }
a) Error
b) Hello 
c) 36 
d) Hello 36 
Answer: d 
--------
Which of these is wrapper around everything associated with a reply from an http server? 
a) HTTP 
b) HttpResponse 
c) Httpserver 
d) httpserver 
Answer: a 
--------
Which of these tranfer protocol must be used so that URL can be accessed by URLConnection class object? 
a) http 
b) https 
c) Any Protocol can be used 
d) None of the mentioned 
Answer: a 
--------
Which of these methods is used to know when was the URL last modified? 
a) LastModified() 
b) getLastModified() 
c) GetLastModified() 
d) getlastModified()() 
Answer: b 
--------
Which of these methods is used to know the type of content used in the URL? 
a) ContentType() 
b) contentType() 
c) getContentType() 
d) GetContentType() 
Answer: c 
--------
Which of these class is used to access actual bits or content information of a URL? 
a) URL 
b) URLDecoder 
c) URLConnection 
d) All of the mentioned 
Answer: d 
--------
Which of these data member of HttpResponse class is used to store the response from a http server? 
a) status 
b) address 
c) statusResponse 
d) statusCode 
Answer: d 
--------
What is the output of this program?
    import java.net.*;
    class networking {
        public static void main(String[] args) throws Exception {
            URL obj = new URL("http://www.sanfoundry.com/javamcq");
            URLConnection obj1 = obj.openConnection();
            System.out.print(obj1.getContentType());
        }
    }
Note: Host URL is written in html and simple text.
a) html 
b) text 
c) html/text 
d) text/html 
Answer: d 
--------
What is the output of this program?
    import java.net.*;
    class networking {
        public static void main(String[] args) throws Exception {
            URL obj = new URL("http://www.sanfoundry.com/javamcq");
            URLConnection obj1 = obj.openConnection();
            int len = obj1.getContentLength();
            System.out.print(len);
        }
    }
Note: Host URL is having length of content 127. 
a) 126 
b) 127 
c) Compilation Error 
d) Runtime Error 
Answer: b 
--------
What is the output of this program?
    import java.net.*;
    class networking {
        public static void main(String[] args) throws Exception {
            URL obj = new URL("http://www.sanfoundry.com/javamcq");
            URLConnection obj1 = obj.openConnection();
            System.out.print(obj1.getLastModified);
        }
    }
Note: Host URL was last modified on july 18 tuesday 2013 .
a) july 
b) 18-6-2013 
c) Tue 18 Jun 2013 
d) Tue Jun 18 2013 
Answer: d 
--------
Which of these method is used to implement Runnable interface? 
a) stop() 
b) run() 
c) runThread() 
d) stopThread() 
Answer: b 
--------
Which of these interface is implemented by Thread class? 
a) Runnable 
b) Connections 
c) Set 
d) MapConnections 
Answer: a 
--------
3 Which of these method is used to begin the execution of a thread? 
a) run() 
b) start() 
c) runThread() 
d) startThread() 
Answer: b 
--------
Which of these method waits for the thread to treminate? 
a) sleep() 
b) isAlive() 
c) join() 
d) stop() 
Answer: c 
--------
Which of these statement is incorrect? 
a) A thread can be formed by implementing Runnable interface only. 
b) A thread can be formed by a class that extends Thread class. 
c) start() method is used to begin execution of the thread. 
d) run() method is used to begin execution of a thread before start() method in special cases. 
Answer: d 
--------
What is the output of this program?
    class newthread implements Runnable {
	Thread t;
	newthread() {
	    t = new Thread(this,"My Thread");
	    t.start();
	public void run() {
	    System.out.println(t.getName());
    }
    class multithreaded_programing {
        public static void main(String args[]) {
            new newthread();        
        }
    }
a) My Thread
b) Thread[My Thread,5,main]
c) Compilation Error 
d) Runtime Error 
Answer: a 
--------
What is the output of this program?
    class newthread implements Runnable {
	Thread t;
	newthread() {
	    t = new Thread(this,"My Thread");
	    t.start();
	public void run() {
	    System.out.println(t);
    }
    class multithreaded_programing {
        public static void main(String args[]) {
            new newthread();        
        }
    }
a) My Thread 
b) Thread[My Thread,5,main]
c) Compilation Error 
d) Runtime Error 
Answer: b 
--------
What is the output of this program?
    class newthread implements Runnable {
	Thread t;
	newthread() {
	    t = new Thread(this,"My Thread");
	    t.start();
    }
    class multithreaded_programing {
        public static void main(String args[]) {
            new newthread();        
        }
    }
a) My Thread 
b) Thread[My Thread,5,main]
c) Compilation Error 
d) Runtime Error 
Answer: c 
--------
What is the output of this program?
    class newthread implements Runnable {
	Thread t;
	newthread() {
	    t = new Thread(this,"New Thread");
	    t.start();
	public void run() {
	    t.setPriority(Thread.MAX_PRIORITY);	
            System.out.println(t);
    }
    class multithreaded_programing {
        public static void main(String args[]) {
            new newthread();        
        }
    }
a) Thread[New Thread,0,main]
b) Thread[New Thread,1,main]
c) Thread[New Thread,5,main]
d) Thread[New Thread,10,main]
Answer: d 
--------
Which of these keywords are used to define an abstract class? 
a) abst 
b) abstract 
c) Abstract 
d) abstract class 
Answer: b 
--------
Which of these is not abstract? 
a) Thread 
b) AbstractList 
c) List 
d) None of the Mentioned 
Answer: a 
--------
If a class inheriting an abstract class does not define all of its function then it will be known as? 
a) abstract 
b) A simple class 
c) Static class 
d) None of the mentioned 
Answer: a 
--------
Which of these is not a correct statement? 
a) Every class containing abstract method must be declared abstract. 
b) Abstract class defines only the structure of the class not its implementation. 
c) Abstract class can be initiated by new operator. 
d) Abstract class can be inherited. 
Answer: c 
--------
Which of these packages contains abstract keyword? 
a) java.lang 
b) java.util 
c) java.io 
d) java.system 
Answer: a 
--------
What is the output of this program?
    class A {
        public int i;
        private int j;
    }    
    class B extends A {
        void display() {
            super.j = super.i + 1;
            System.out.println(super.i + " " + super.j);
        }
    }    
    class inheritance {
        public static void main(String args[])
        {
            B obj = new B();
            obj.i=1;
            obj.j=2;   
            obj.display();     
        }
   }
a) 2 2
b) 3 3 
c) Runtime Error 
d) Compilation Error 
Answer: d 
--------
What is the output of this program?
    class A {
        public int i;
        public int j;
        A() {
            i = 1;
            j = 2;
    }    
    class B extends A {
        int a;
	B() {
            super();
        } 
    }    
    class super_use {
        public static void main(String args[])
        {
            B obj = new B();
            System.out.println(obj.i + " " + obj.j)     
        }
   }
a) 1 2 
b) 2 1 
c) Runtime Error 
d) Compilation Error 
Answer: a 
--------
What is the output of this program?
    abstract class A {
        int i;
        abstract void display();
    }    
    class B extends A {
        int j;
        void display() {
            System.out.println(j);
        }
    }    
    class Abstract_demo {
        public static void main(String args[])
        {
            B obj = new B();
            obj.j=2;
            obj.display();    
        }
   }
a) 0 
b) 2 
c) Runtime Error 
d) Compilation Error 
Answer: b 
--------
What is the output of this program?
    class A {
        int i;
        void display() {
            System.out.println(i);
        }
    }    
    class B extends A {
        int j;
        void display() {
            System.out.println(j);
        }
    }    
    class method_overriding {
        public static void main(String args[])
        {
            B obj = new B();
            obj.i=1;
            obj.j=2;   
            obj.display();     
        }
   }
a) 0
b) 1 
c) 2 
d) Compilation Error 
Answer: c 
--------
Which of these keyword must be used to inherit a class? 
a) super 
b) this 
c) extent 
d) extends 
Answer: d 
--------
Which of these keywords is used to refer to member of base class from a sub class? 
a) upper 
b) super 
c) this 
d) None of the mentioned 
Answer: b 
--------
A class member declared protected becomes member of subclass of which type? 
a) public member 
b) private member 
c) protected member 
d) static member 
Answer: b 
--------
Which of these is correct way of inheriting class A by class B? 
a) class B + class A {} 
b) class B inherits class A {} 
c) class B extends A {} 
d) class B extends class A {} 
Answer: c 
--------
Which of the following statements are incorrect? 
a) public members of class can be accessed by any code in the program. 
b) private members of class can only be accessed by other members of the class. 
c) private members of class can be inherited by a sub class, and become protected members in sub class. 
d) protected members of a class can be inherited by a sub class, and become private members of the sub class. 
Answer: c 
--------
What is the output of this program?
    class A {
        int i;
        void display() {
            System.out.println(i);
        }
    }    
    class B extends A {
        int j;
        void display() {
            System.out.println(j);
        }
    }    
    class inheritance_demo {
        public static void main(String args[])
        {
            B obj = new B();
            obj.i=1;
            obj.j=2;   
            obj.display();     
        }
   }
a) 0
b) 1 
c) 2 
d) Compilation Error 
Answer: c 
--------
What is the output of this program?
    class A {
        int i;
    }    
    class B extends A {
        int j;
        void display() {
            super.i = j + 1;
            System.out.println(j + " " + i);
        }
    }    
    class inheritance {
        public static void main(String args[])
        {
            B obj = new B();
            obj.i=1;
            obj.j=2;   
            obj.display();     
        }
   }
a) 2 2 
b) 3 3 
c) 2 3 
d) 3 2 
Answer: c 
--------
What is the output of this program?
    class A {
        public int i;
        private int j;
    }    
    class B extends A {
        void display() {
            super.j = super.i + 1;
            System.out.println(super.i + " " + super.j);
        }
    }    
    class inheritance {
        public static void main(String args[])
        {
            B obj = new B();
            obj.i=1;
            obj.j=2;   
            obj.display();     
        }
   }
a) 2 2 
b) 3 3 
c) Runtime Error 
d) Compilation Error 
Answer: d 
--------
What is the output of this program?
    class A {
        public int i;
        public int j;
        A() {
            i = 1;
            j = 2;
    }    
    class B extends A {
        int a;
        B() {
            super();
        } 
    }    
    class super_use {
        public static void main(String args[])
        {
            B obj = new B();
            System.out.println(obj.i + " " + obj.j)     
        }
   }
a) 1 2
b) 2 1 
c) Runtime Error 
d) Compilation Error 
Answer: a 
--------
What does AWT stands for? 
a) All Window Tools 
b) All Writing Tools 
c) Abstract Window Toolkit 
d) Abstract Writing Toolkit 
Answer: c 
--------
Which of these is used to perform all input & output operations in Java? 
a) streams 
b) Variables 
c) classes 
d) Methods 
Answer: a 
--------
Which of these is a type of stream in Java? 
a) Integer stream 
b) Short stream 
c) Byte stream 
d) Long stream 
Answer: c 
--------
Which of these classes are used by Byte streams for input and output operation? 
a) InputStream 
b) InputOutputStream 
c) Reader 
d) All of the mentioned 
Answer: a 
--------
Which of these classes are used by character streams for input and output operations? 
a) InputStream 
b) Writer 
c) ReadStream 
d) InputOutputStream 
Answer: b 
--------
Which of these class is used to read from byte array? 
a) InputStream. 
b) BufferedInputStream. 
c) ArrayInputStream. 
d) ByteArrayInputStream. 
Answer: d 
--------
What is the output of this program if input given is 'abcqfghqbcd'?
    class Input_Output {
        public static void main(String args[]) throws IOException {	 
            char c;
            BufferedReader obj = new BufferedReader(new InputStreamReader(System.in));
            do {
                c = (char) obj.read();
	        System.out.print(c);
            } while(c != 'q');
        }
    }
a) abcqfgh
b) abc 
c) abcq 
d) abcqfghq 
Answer: c 
--------
What is the output of this program if input given is "abc'def/'egh"?
    class Input_Output {
        public static void main(String args[]) throws IOException {	 
            char c;
            BufferedReader obj = new BufferedReader(new InputStreamReader(System.in));
            do {
                c = (char) obj.read();
	        System.out.print(c);
            } while(c!='\'');
        }
    }
a) abc' 
b) abcdef/' 
c) abc'def/'egh 
d) abcqfghq 
Answer: a 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
             StringBuffer c = new StringBuffer("Hello");
             System.out.println(c.length());
        }
    }
a) 4
b) 5 
c) 6 
d) 7 
Answer: b 
--------
What is the range of data type short in Java? 
a) -128 to 127 
b) -32768 to 32767 
c) -2147483648 to 2147483647 
d) None of the mentioned 
Answer:b 
--------
What is the range of data type byte in Java? 
a) -128 to 127 
b) -32768 to 32767 
c) -2147483648 to 2147483647 
d) None of the mentioned 
Answer:a 
--------
Which of the following are legal lines of Java code? 
   1. int w = (int)888.8; 
   2. byte x = (byte)100L; 
   3. long y = (byte)100; 
   4. byte z = (byte)100L; 
a) 1 and 2 
b) 2 and 3 
c) 3 and 4 
d) All statements are correct. 
Answer: d 
--------
An expression involving byte, int, and literal numbers is promoted to which of these? 
a) int 
b) long 
c) byte 
d) float 
Answer: a 
--------
Which of these literals can be contained in a data type float variable? 
a) 1.7e-308 
b) 3.4e-038 
c) 1.7e+308 
d) 3.4e-050 
Answer: b 
--------
Which data type value is returned by all transcendental math functions? 
a) int 
b) float 
c) double 
d) long 
Answer:c 
--------
What is the output of this program?
    class average {
        public static void main(String args[])
        {
            double num[] = {5.5, 10.1, 11, 12.8, 56.9, 2.5};
            double result;
            result = 0;
            for (int i = 0; i < 6; ++i) 
                result = result + num[i];
	    System.out.print(result/6);
        } 
    }
a) 16.34
b) 16.566666644 
c) 16.46666666666667 
d) 16.46666666666666 
Answer:c 
--------
What is the output of this program?
    class conversion {
        public static void main(String args[]) 
        {    
             double a = 295.04;
             int  b = 300;
             byte c = (byte) a;
             byte d = (byte) b;
             System.out.println(c + " "  + d);
        } 
    }
a) 38 43 
b) 39 44 
c) 295 300 
d) 295.04 300 
Answer:b 
--------
What is the output of this program?
    class increment {
        public static void main(String args[]) 
        {        
             int g = 3;
             System.out.print(++g * 8);
        } 
    }
a) 25
b) 24 
c) 32 
d) 33 
Answer:c 
--------
Which of these keywords is used to define interfaces in Java? 
a) interface 
b) Interface 
c) intf 
d) Intf 
Answer: a 
--------
Which of these can be used to fully abstract a class from its implementation? 
a) Objects 
b) Packages 
c) Interfaces 
d) None of the Mentioned. 
Answer: c 
--------
Which of these access specifiers can be used for an interface? 
a) Public 
b) Protected 
c) private 
d) All of the mentioned 
Answer: a 
--------
Which of these keywords is used by a class to use an interface defined previously? 
a) import 
b) Import 
c) implements 
d) Implements 
Answer: c 
--------
Which of the following is correct way of implementing an interface salary by class manager? 
a) class manager extends salary {} 
b) class manager implements salary {} 
c) class manager imports salary {} 
d) None of the mentioned. 
Answer: b 
--------
Which of the following is incorrect statement about packages? 
a) Interfaces specifies what class must do but not how it does. 
b) Interfaces are specified public if they are to be accessed by any code in the program. 
c) All variables in interface are implicitly final and static. 
d) All variables are static and methods are public if interface is defined pubic. 
Answer: b 
--------
What is the output of this program?
    interface calculate {
        void cal(int item);
    }
    class display implements calculate {
        int x;
        public void cal(int item) {
            x = item * item;            
        }
    }
    class interfaces {
        public static void main(String args[]) {
            display arr = new display;
            arr.x = 0;      
            arr.cal(2);
            System.out.print(arr.x);
        }
    }
a) 0 
b) 2 
c) 4 
d) None of the mentioned 
Answer: c 
--------
What is the output of this program?
    interface calculate {
        void cal(int item);
    }
    class displayA implements calculate {
        int x;
        public void cal(int item) {
            x = item * item;            
        }
    }
    class displayB implements calculate {
        int x;
        public void cal(int item) {
            x = item / item;            
        }
    }
    class interfaces {
        public static void main(String args[]) {
            displayA arr1 = new displayA;
            displayB arr2 = new displayB;
            arr1.x = 0;
            arr2.x = 0;      
            arr1.cal(2);
            arr2.cal(2);
            System.out.print(arr1.x + " " + arr2.x);
        }
    }
a) 0 0
b) 2 2 
c) 4 1 
d) 1 4 
Answer: c 
--------
What is the return type of a method that does not returns any value? 
a) int 
b) float 
c) void 
d) double 
Answer: c 
--------
What is the process of defining more than one method in a class differentiated by method signature? 
a) Function overriding 
b) Function overloading 
c) Function doubling 
d) None of the mentioned 
Answer:b 
--------
Which of the following is a method having same name as that of it's class? 
a) finalize 
b) delete 
c) class 
d) constructor 
Answer: d 
--------
Which method can be defined only once in a program? 
a) main method 
b) finalize method 
c) static method 
d) private method 
Answer: a 
--------
Which of these statement is incorrect? 
a) All object of a class are allotted memory for the all the variables defined in the class. 
b) If a function is defined public it can be accessed by object of other class by inheritation. 
c) main() method must be made public. 
d) All object of a class are allotted memory for the methods defined in the class. 
Answer: d 
--------
What is the output of this program?
    class box {
        int width;
        int height;
        int length;
        int volume;
        void volume(int height, int length, int width) {
             volume = width*height*length;
        } 
    }    
    class Prameterized_method{
        public static void main(String args[])
        {
            box obj = new box();
            obj.height = 1;
            obj.length = 5;
            obj.width = 5;
            obj.volume(3,2,1);
            System.out.println(obj.volume);        
        } 
    }
a) 0
b) 1 
c) 6 
d) 25 
Answer: c 
--------
What is the output of this program?
    class equality {
        int x;
        int y;
        boolean isequal(){
            return(x == y);  
        } 
    }    
    class Output {
        public static void main(String args[])
        {
            equality obj = new equality();
            obj.x = 5;
            obj.y = 5;
            System.out.println(obj.isequal());
        } 
    }
a) false 
b) true 
c) 0 
d) 1 
Answer: b 
--------
What is the output of this program?
    class box {
        int width;
        int height;
        int length;
        int volume;
        void volume() {
             volume = width*height*length;
        } 
    }    
    class Output { 
        public static void main(String args[])
        {
            box obj = new box();
            obj.height = 1;
            obj.length = 5;
            obj.width = 5;
            obj.volume();
            System.out.println(obj.volume);        
        } 
    }
a) 0 
b) 1 
c) 25 
d) 26 
Answer: d 
--------
Which of these method can be used to make the main thread to be executed last among all the threads? 
a) stop() 
b) sleep() 
c) join() 
d) call() 
Answer: b 
--------
Which of these method is used to find out that a thread is still running or not? 
a) run() 
b) Alive() 
c) isAlive() 
d) checkRun() 
Answer: c 
--------
What is the default value of priority variable MIN_PRIORITY AND MAX_PRIORITY? 
a) 0 & 256 
b) 0 & 1 
c) 1 & 10 
d) 1 & 256 
Answer: c 
--------
Which of these method waits for the thread to treminate? 
a) sleep() 
b) isAlive() 
c) join() 
d) stop() 
Answer: c 
--------
Which of these method is used to explicitly set the priority of a thread? 
a) set() 
b) make() 
c) setPriority() 
d) makePriority() 
Answer: c 
--------
What is synchronization in reference to a thread? 
a) It’s a process of handling situations when two or more threads need access to a shared resource. 
b) Its a process by which many thread are able to access same shared resource simultaneously. 
c) Its a process by which a method is able to access many different threads simultaneously. 
d) Its a method that allow to many threads to access any information require. 
Answer: a 
--------
What is the output of this program?
    class newthread extends Thread {
	newthread() {
	    super("My Thread");
	    start();
	public void run() {
	    System.out.println(this);
    }
    class multithreaded_programing {
        public static void main(String args[]) {
            new newthread();        
        }
    }
a) My Thread
b) Thread[My Thread,5,main]
c) Compilation Error 
d) Runtime Error 
Answer: b 
--------
What is the output of this program?
    class newthread extends Thread {
	Thread t;
	newthread() {
	    t = new Thread(this,"My Thread");
	    t.start();
	public void run() {
            try {
                t.join()   
	        System.out.println(t.getName());
            }
            catch(Exception e) {
            System.out.print("Exception");
            }
    }
    class multithreaded_programing {
        public static void main(String args[]) {
            new newthread();        
        }
    }
a) My Thread 
b) Thread[My Thread,5,main]
c) Exception 
d) Runtime Error 
Answer: d 
--------
What is the output of this program?
    class newthread extends Thread {
	Thread t;
	newthread() {
	    t = new Thread(this,"New Thread");
	    t.start();
	public void run() {
	   System.out.println(t.isAlive());
    }
    class multithreaded_programing {
        public static void main(String args[]) {
            new newthread();        
        }
    }
a) 0
b) 1 
c) true 
d) false 
Answer: c 
--------
Which of these return type of hasNext() method of an iterator? 
a) Integer 
b) Double 
c) Boolean 
d) Collections Object 
Answer: c 
--------
Which of these methods is used to obtain an iterator to the start of collection? 
a) start() 
b) begin() 
c) iteratorSet() 
d) iterator() 
Answer: d 
--------
Which of these methods can be used to move to next element in a collection? 
a) next() 
b) move() 
c) shuffle() 
d) hasNext() 
Answer: a 
--------
Which of these iterators can be used only with List? 
a) Setiterator 
b) ListIterator 
c) Literator 
d) None of the mentioned 
Answer: b 
--------
Which of these is a method of ListIterator used to  obtain index of previous element? 
a) previous() 
b) previousIndex() 
c) back() 
d) goBack() 
Answer: b 
--------
Which of these exceptions is thrown by remover() method? 
a) IOException 
b) SystemException 
c) ObjectNotFoundExeception 
d) IllegalStateException 
Answer: d 
--------
What is the output of this program?
    import java.util.*;
    class Collection_iterators {
        public static void main(String args[]) {
            ListIterator a = list.listIterator();
                if(a.previousIndex()! = -1)
                    while(a.hasNext())
	                System.out.print(a.next() + " ");
                else
                   System.out.print("EMPTY");
        }
    }
a) 0
b) 1 
c) -1 
d) EMPTY 
Answer: d 
--------
What is the output of this program?
    import java.util.*;
    class Collection_iterators {
        public static void main(String args[]) {
            LinkedList list = new LinkedList();
            list.add(new Integer(2));
            list.add(new Integer(8));
            list.add(new Integer(5));
            list.add(new Integer(1));
            Iterator i = list.iterator();
            Collections.reverse(list);
	    while(i.hasNext())
	        System.out.print(i.next() + " ");
        }
    }
a) 2 8 5 1 
b) 1 5 8 2 
c) 2 
d) 2 1 8 5 
Answer: b 
--------
What is the output of this program?
    import java.util.*;
    class Collection_iterators {
        public static void main(String args[]) {
            LinkedList list = new LinkedList();
            list.add(new Integer(2));
            list.add(new Integer(8));
            list.add(new Integer(5));
            list.add(new Integer(1));
            Iterator i = list.iterator();
            Collections.reverse(list);
	    Collections.sort(list);
            while(i.hasNext())
	        System.out.print(i.next() + " ");
        }
    }
a) 2 8 5 1
b) 1 5 8 2 
c) 1 2 5 8 
d) 2 1 8 5 
Answer: c 
--------
Which of these classes encapsulate run-time state of an object? 
a) Class 
b) System 
c) Runtime 
d) Catche 
Answer: a 
--------
Which of the following constant are defined in Boolean wrapper? 
a) TRUE 
b) FLASE 
c) TYPE 
d) All of the mentioned 
Answer: d 
--------
Which of these methods returns the class of an object? 
a) getClass() 
b) Class() 
c) WhoseClass() 
d) WhoseObject() 
Answer: a 
--------
Which of these methods is used to know whether a string contains "true"? 
a) valueOf() 
b) valueOfString() 
c) getString() 
d) None of the mentioned 
Answer: a 
--------
Which of these class have only one field? 
a) Character 
b) Boolean 
c) Byte 
d) void 
Answer: d 
--------
What is the output of this program?
    class X {
        int a;
        double b;
    }
    class Y extends X {
	int c;
    }
    class Output {
        public static void main(String args[]) {
            X a = new X();
            Y b = new Y();
            Class obj;
            obj = a.getClass();
            System.out.print(obj.getName());
        }
    }
a) X
b) Y 
c) a 
d) b 
Answer: a 
--------
What is the output of this program?
    class X {
        int a;
        double b;
    }
    class Y extends X {
	int c;
    }
    class Output {
        public static void main(String args[]) {
            X a = new X();
            Y b = new Y();
            Class obj;
            obj = b.getClass();
            System.out.print(obj.getSuperclass());
        }
    }
a) X 
b) Y 
c) class X 
d) class Y 
Answer: c 
--------
What is the output of this program?
    class X {
        int a;
        double b;
    }
    class Y extends X {
	int c;
    }
    class Output {
        public static void main(String args[]) {
            X a = new X();
            Y b = new Y();
            Class obj;
            obj = b.getClass();
            System.out.print(b.equals(a));
        }
    }
a) 0 
b) 1 
c) true 
d) false 
Answer: d 
--------
What is the output of this program?
    class X {
        int a;
        double b;
    }
    class Y extends X {
	int c;
    }
    class Output {
        public static void main(String args[]) {
            X a = new X();
            Y b = new Y();
            Class obj;
            obj = b.getClass();
            System.out.print(obj.isInstance(a));
        }
    }
a) 0
b) 1 
c) true 
d) false 
Answer: d 
--------
Which of these is data type long literal? 
a) 0x99fffL 
b) ABCDEFG 
c) 0x99fffa 
d) 99671246 
Answer:a 
--------
Which of these can be returned by the operator & ? 
a) Integer 
b) Boolean 
c) Character 
d) Integer or Boolean 
Answer:d 
--------
Literals in java must be preceded by which of these? 
a) L 
b) l 
c) D 
d) L and I 
Answer:d 
--------
Literal can be of which of these data types? 
a) integer 
b) float 
c) boolean 
d) all of the mentioned 
Answer:d 
--------
Which of these can not be used for a variable name in Java? 
a) identifier 
b) keyword 
c) identifier & keyword 
d) None of the mentioned 
Answer:c 
--------
What is the output of this program?
    class array_output {
        public static void main(String args[]) 
        {
       	    int array_variable [] = new int[10];
	    for (int i = 0; i < 10; ++i) {
                array_variable[i] = i/2;
                array_variable[i]++;
                System.out.print(array_variable[i] + " ");
                i++;
            }
        } 
    }
a) 0 2 4 6 8 
b) 1 2 3 4 5 
c) 0 1 2 3 4 5 6 7 8 9 
d) 1 2 3 4 5 6 7 8 9 10 
Answer:b 
--------
What is the output of this program?
    class variable_scope {
        public static void main(String args[]) 
        {
            int x;
            x = 5;
            {
	        int y = 6;
	        System.out.print(x + " " + y);
            }
            System.out.println(x + " " + y);
        } 
    }
a) 5 6 5 6
b) 5 6 5 
c) Runtime error 
d) Compilation error 
Answer:d 
--------
Which of these is incorrect string literal? 
a) "Hello World" 
b) "Hello\nWorld" 
c) "\"Hello World"" 
d) "Hello 
          world" 
Answer:d 
--------
Which of these class contains all the methods present in Math class? 
a) SystemMath 
b) StrictMath 
c) Compiler 
d) ClassLoader 
Answer: b 
--------
Which of these method return a pseudorandom number? 
a) rand() 
b) random() 
c) randomNumber() 
d) randGenerator() 
Answer: b 
--------
Which of these method returns the remainder of dividend / devisor? 
a) remainder() 
b) getRemainder() 
c) CSIremainder() 
d) IEEEremainder() 
Answer: d 
--------
Which of these method converts radians to degrees? 
a) toRadian() 
b) toDegree() 
c) convertRadian() 
d) converDegree() 
Answer: b 
--------
toRadian() and toDegree() methods were added by which version of Java? 
a) Java 1.0 
b) Java 1.5 
c) Java 2.0 
d) Java 3.0 
Answer: c 
--------
Which of these method return a smallest whole number greater than or equal to variable X? 
a) double ciel(double X) 
b) double floor(double X) 
c) double max(double X) 
d) double min(double X) 
Answer: a 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
            double x = 3.14;  
            int y = (int) Math.toDegrees(x);
            System.out.print(y);
        }
    }
a) 0
b) 179 
c) 180 
d) 360 
Answer: b 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
            double x = 3.14;  
            int y = (int) Math.toRadians(x);
            System.out.print(y);
        }
    }
a) 0 
b) 3 
c) 3.0 
d) 3.1 
Answer: b 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
            double x = 102;
            double y = 5;
            double z = Math.IEEEremainder(x, y);
            System.out.print(z);}
        }
    }
a) 0
b) 1 
c) 2 
d) 3 
Answer: b 
--------
Which of these keyword can be used in subclass to call the constructor of superclass? 
a) super 
b) this 
c) extent 
d) extends 
Answer: a 
--------
What is the process of defining a method in subclass having same name & type signature as a method in its superclass? 
a) Method overloading 
b) Method overriding 
c) Method hiding 
d) None of the mentioned 
Answer: b 
--------
Which of these keywords can be used to prevent Method overriding? 
a) static 
b) constant 
c) protected 
d) final 
Answer: d 
--------
Which of these is correct way of calling a constructor having no parameters, of superclass A by subclass B? 
a) super(void); 
b) superclass.(); 
c) super.A(); 
d) super(); 
Answer: d 
--------
Which of the following statements are incorrect? 
a) public members of class can be accessed by any code in the program. 
b) private members of class can only be accessed by other members of the class. 
c) private members of class can be inherited by a sub class, and become protected members in sub class. 
d) protected members of a class can be inherited by a sub class, and become private members of the sub class. 
Answer: c 
--------
Which of these is supported by method overriding in Java? 
a) Abstraction 
b) Encapsulation 
c) Polymorphism 
d) None of the mentioned 
Answer: c 
--------
What is the output of this program?
    class A {
        int i;
        void display() {
            System.out.println(i);
        }
    }    
    class B extends A {
        int j;
        void display() {
            System.out.println(j);
        }
    }    
    class method_overriding {
        public static void main(String args[])
        {
            B obj = new B();
            obj.i=1;
            obj.j=2;   
            obj.display();     
        }
   }
a) 0
b) 1 
c) 2 
d) Compilation Error 
Answer: c 
--------
What is the output of this program?
   final class A {
         int i;
    }    
    class B extends A {
        int j;
        System.out.println(j + " " + i);  
    }    
    class inheritance {
        public static void main(String args[])
        {
            B obj = new B();
            obj.display();     
        }
   }
a) 2 2 
b) 3 3 
c) Runtime Error 
d) Compilation Error 
Answer: d 
--------
What is the output of this program?
    class A {
        public int i;
        private int j;
    }    
    class B extends A {
        void display() {
            super.j = super.i + 1;
            System.out.println(super.i + " " + super.j);
        }
    }    
    class inheritance {
        public static void main(String args[])
        {
            B obj = new B();
            obj.i=1;
            obj.j=2;   
            obj.display();     
        }
   }
a) 2 2 
b) 3 3 
c) Runtime Error 
d) Compilation Error 
Answer: d 
--------
What is the output of this program?
    class A {
        public void display() {
            System.out.println("A");
        }    
    }    
    class B extends A {
        public void display() {
            System.out.println("B");
        } 
    }    
    class Dynamic_dispatch {
        public static void main(String args[])
        {
            A obj1 = new A();
            B obj2 = new B();
            A r;
            r = obj1;
            r.display();
            r = obj2;
            r.display();     
        }
   }
a) A B
b) B A 
c) Runtime Error 
d) Compilation Error 
Answer: a 
--------
Which of these is the method which is executed first before execution of any other thing takes place in a program? 
a) main method 
b) finalize method 
c) static method 
d) private method 
Answer: c 
--------
What is the process of defining more than one method in a class differentiated by parameters? 
a) Function overriding 
b) Function overloading 
c) Function doubling 
d) None of these 
Answer:b 
--------
Which of these can be used to diffrentiate two or more methods having same name? 
a) Parameters data type 
b) Number of parameters 
c) Return type of method 
d) All of the mentioned 
Answer: d 
--------
Which of these data tupe can be used for a method having a return statement in it? 
a) void 
b) int 
c) float 
d) All of the mentioned 
Answer: d 
--------
Which of these statement is incorrect? 
a) Two or more methods with same name can be diffrenciated on the basis of their parameters data type. 
b) Two or more method having same name can be diffrentiated on basis of number of parameters. 
c) Any already defined method in java's library can be defined again in the program with diffrent data type of parameters. 
d) If a method is returning a value the calling statement must have a varible to store that value. 
Answer: d 
--------
What is the output of this program?
    class box {
        int width;
        int height;
        int length;
        int volume;
        void volume(int height, int length, int width) {
             volume = width * height * length;
        } 
    }    
    class Prameterized_method{
        public static void main(String args[]) {
            box obj = new box();
            obj.height = 1;
            obj.length = 5;
            obj.width = 5;
            obj.volume(3, 2, 1);
            System.out.println(obj.volume);        
        } 
    }
a) 0
b) 1 
c) 6 
d) 25 
Answer: c 
--------
What is the output of this program?
    class equality {
        int x;
        int y;
        boolean isequal(){
            return(x == y);  
        } 
    }    
    class Output {
        public static void main(String args[]) {
            equality obj = new equality();
            obj.x = 5;
            obj.y = 5;
            System.out.println(obj.isequal);
        } 
    }
a) false 
b) true 
c) 0 
d) 1 
Answer: b 
--------
What is the output of this program?
    class box {
        int width;
        int height;
        int length;
        int volume;
        void volume() {
            volume = width * height * length;
        } 
        void volume(int x) {
            volume = x;
        }
    }    
    class Output { 
        public static void main(String args[]) {
            box obj = new box();
            obj.height = 1;
            obj.length = 5;
            obj.width = 5;
            obj.volume(5);
            System.out.println(obj.volume);        
        } 
    }
a) 0 
b) 5 
c) 25 
d) 26 
Answer: d 
--------
Which of these events is generated when the a window is closed? 
a) TextEvent 
b) MouseEvent 
c) FocusEvent 
d) WindowEvent 
Answer: d 
--------
Which of these events is generated when the component is added or removed? 
a) ComponentEvent 
b) ContainerEvent 
c) FocusEvent 
d) InputEvent 
Answer: b 
--------
Which of these methods can be used to obtain the coordinates of a mouse? 
a) getPoint() 
b) getCoordinates() 
c) getMouseXY() 
d) getMouseCordinates() 
Answer: a 
--------
Which of these methods can be used to change location of an event? 
a) ChangePoint() 
b) TranslatePoint() 
c) ChangeCordinates() 
d) TranslateCordinates() 
Answer: b 
--------
Which of these methods is used to obtain the object that generated a WindowEvent? 
a) getMethod() 
b) getWindow() 
c) getWindowEvent() 
d) getWindowObject() 
Answer: b 
--------
MouseEvent is subclass of which of these classes? 
a) ComponentEvent 
b) ContainerEvent 
c) ItemEvent 
d) InputEvent 
Answer: d 
--------
Which of these methods is used to get x coordinate of the mouse? 
a) getX() 
b) getXCoordinate() 
c) getCoordinateX() 
d) getPointX() 
Answer: d 
--------
What is multithreaded programming? 
a) It’s a process in which two different processes run simultaneously. 
b) It’s a process in which two or more parts of same process run simultaneously. 
c) Its a process in which many different process are able to access same information. 
d) Its a process in which a single process can access information from many sources. 
Answer: b 
--------
Which of these are types of multitasking? 
a) Process based 
b) Thread based 
c) Process and Thread based 
d) None of the mentioned 
Answer: c 
--------
Which of these packages contain all the Java's built in exceptions? 
a) java.io 
b) java.util 
c) java.lang 
d) java.net 
Answer: c 
--------
Thread priority in Java is? 
a) Integer 
b) Float 
c) double 
d) long 
Answer: a 
--------
What will happen if two thread of same priority are called to be processed simultaneously? 
a) Any one will be executed first lexographically 
b) Both of them will be executed simultaneously 
c) None of them will be executed 
d) It is dependent on the operating system. 
Answer: d 
--------
Which of these statements is incorrect? 
a) By multithreading CPU's idle time is minimized, and we can take maximum use of it. 
b) By multitasking CPU's idle time is minimized, and we can take maximum use of it. 
c) Two thread in Java can have same priority 
d) A thread can exist only in two states, running and blocked. 
Answer: d 
--------
What is the output of this program?
    class multithreaded_programing {
        public static void main(String args[]) {
            Thread t = Thread.currentThread();
            System.out.println(t);        
        }
    }
a) Thread[5,main]
b) Thread[main,5]
c) Thread[main,0]
d) Thread[main,5,main]
Answer: d 
--------
What is the priority of the thread in output of this program?
    class multithreaded_programing {
        public static void main(String args[]) {
            Thread t = Thread.currentThread();
            System.out.println(t);        
        }
    }
a) 4 
b) 5 
c) 0 
d) 1 
Answer: b 
--------
What is the name of the thread in output of this program?
    class multithreaded_programing {
        public static void main(String args[]) {
            Thread t = Thread.currentThread();
            System.out.println(t);        
        }
    }
a) main
b) Thread 
c) System 
d) None of the mentioned 
Answer: a 
--------
Which of these package contains classes and interfaces for networking? 
a) java.io 
b) java.util 
c) java.net 
d) java.network 
Answer: c 
--------
Which of these is a protocol for breaking and sending packets to an address across a network? 
a) TCIP/IP 
b) DNS 
c) Socket 
d) Proxy Server 
Answer: a 
--------
How many ports of TCP/IP are reserved for specific protocols? 
a) 10 
b) 1024 
c) 2048 
d) 512 
Answer: b 
--------
How many bits are in a single IP address? 
a) 8 
b) 16 
c) 32 
d) 64 
Answer: c 
--------
Which of these is a full form of DNS? 
a) Data Network Service 
b) Data Name Service 
c) Domain Network Service 
d) Domian Name Service 
Answer: d 
--------
Which of these class is used to encapsulate IP address and DNS? 
a) DatagramPacket 
b) URL 
c) InetAddress 
d) ContentHandler 
Answer: c 
--------
What is the output of this program?
    import java.net.*;
    class networking {
        public static void main(String[] args) throws UnknownHostException {
            InetAddress obj1 = InetAddress.getByName("cisco.com");
            InetAddress obj2 = InetAddress.getByName("sanfoundary.com");
            boolean x = obj1.equals(obj2); 
            System.out.print(x);
        }
    }
a) 0 
b) 1 
c) true 
d) false 
Answer: d 
--------
What is the output of this program?
    import java.io.*;
    class streams {
        public static void main(String[] args) {
            try {
	        FileOutputStream fos = new FileOutputStream("serial");
	        ObjectOutputStream oos = new ObjectOutputStream(fos);
	        oos.writeFloat(3.5);
	        oos.flush();
	        oos.close();
	    }
	    catch(Exception e) {
	        System.out.println("Serialization" + e);
                System.exit(0);
            }
	    try {
	        FileInputStream fis = new FileInputStream("serial");
	        ObjectInputStream ois = new ObjectInputStream(fis);
	        ois.close();
	        System.out.println(ois.available());		    	
	    }
	    catch (Exception e) {
                System.out.print("deserialization");
	        System.exit(0);
	    }
        }
    }
a) 1
b) 2 
c) 3 
d) 4 
Answer: d 
--------
Which of these is a bundle of information passed between machines? 
a) Mime 
b) cache 
c) Datagrams 
d) DatagramSocket 
Answer: c 
--------
Which of these class is necessary to implement datagrams? 
a) DatagramPacket 
b) DatagramSocket 
c) All of the mentioned 
d) None of the mentioned 
Answer: c 
--------
Which of these method of DatagramPacket is used to find the port number? 
a) port() 
b) getPort() 
c) findPort() 
d) recievePort() 
Answer: a 
--------
Which of these method of DatagramPacket is used to obtain the byte array of data contained in a datagram? 
a) getData() 
b) getBytes() 
c) getArray() 
d) recieveBytes() 
Answer: a 
--------
Which of these method of DatagramPacket is used to find the length of byte array? 
a) getnumber() 
b) length() 
c) Length() 
d) getLength() 
Answer: d 
--------
What is the output of this program?
    import java.net.*;
    class networking {
        public static void main(String[] args) throws Exception {
            URL obj = new URL("http://www.sanfoundry.com/javamcq");
            URLConnection obj1 = obj.openConnection();
            System.out.print(obj1.getContentType());
        }
    }
Note: Host URL is written in html and simple text. 
a) html 
b) text 
c) html/text 
d) text/html 
Answer: d 
--------
Which of these method of DatagramPacket class is used to find the destination address? 
a) findAddress() 
b) getAddress() 
c) Address() 
d) whois() 
Answer: b 
--------
Which of these class is superclass of every class in Java? 
a) String class 
b) Object class 
c) Abstract class 
d) ArrayList class 
Answer: b 
--------
Which of these method of Object class can clone an object? 
a) Objectcopy() 
b) copy() 
c) Object clone() 
d) clone() 
Answer: c 
--------
Which of these method of Object class is used to obtain class of an object at run time? 
a) get() 
b) void getclass() 
c) Class getclass() 
d) None of the mentioned 
Answer: c 
--------
Which of these keywords can be used to prevent inheritance of a class? 
a) super 
b) constant 
c) Class 
d) final 
Answer: d 
--------
Which of these keywords cannot be used for a class which has been declared final? 
a) abstract 
b) extends 
c) abstract and extends 
d) None of the mentioned 
Answer: a 
--------
Which of these class relies upon its subclasses for complete implementation of its methods? 
a) Object class 
b) abstract class 
c) ArrayList class 
d) None of the mentioned 
Answer: b 
--------
What is the output of this program?
    abstract class A {
        int i;
        abstract void display();
    }    
    class B extends A {
        int j;
        void display() {
            System.out.println(j);
        }
    }    
    class Abstract_demo {
        public static void main(String args[])
        {
            B obj = new B();
            obj.j=2;
            obj.display();    
        }
   }
a) 0
b) 2 
c) Runtime Error 
d) Compilation Error 
Answer: b 
--------
What is the output of this program?
   class A {
	int i;
	int j;
        A() {
            i = 1;
            j = 2;
        }
   }
   class Output {
        public static void main(String args[])
        {
             A obj1 = new A();
             A obj2 = new A();
	     System.out.print(obj1.equals(obj2));
        }
   }
a) false 
b) true 
c) 1 
d) Compilation Error 
Answer: a 
--------
What is the output of this program?
    class Output {
        public static void main(String args[])
        {
             Object obj = new Object();
	     System.out.print(obj.getclass());
        }
    }
a) Object
b) class Object 
c) class java.lang.Object 
d) Compilation Error 
Answer: c 
--------
What is process of defining two or more methods within same class that have same name but different parameters declaration? 
a) method overloading 
b) method overriding 
c) method hiding 
d) None of the mentioned 
Answer: a 
--------
Which of these can be overloaded? 
a) Methods 
b) Constructors 
c) All of the mentioned 
d) None of the mentioned 
Answer: c 
--------
Which of these is correct about passing an argument by call-by-value process? 
a) Copy of argument is made into the formal parameter of the subroutine. 
b) Reference to original argument is passed to formal parameter of the subroutine. 
c) Copy of argument is made into the formal parameter of the subroutine and changes made on parameters of subroutine have effect on original argument. 
d) Reference to original argument is passed to formal parameter of the subroutine and changes made on parameters of subroutine have effect on original argument. 
Answer: a 
--------
What is the process of defining a method in terms of itself, that is a method that calls itself? 
a) Polymorphism 
b) Abstraction 
c) Encapsulation 
d) Recursion 
Answer: d 
--------
Which of the following statements are incorrect? 
a) Default constructor is called at the time of declaration of the object if a constructor has not been defined. 
b) Constructor can be parameterized. 
c) finalize() method is called when a object goes out of scope and is no longer needed. 
d) finalize() method must be declared protected. 
Answer: c 
--------
What is the output of this program?
    class overload {
        int x;
 	int y;
        void add(int a) {
            x =  a + 1;
        }
        void add(int a, int b){
            x =  a + 2;
        }        
    }    
    class Overload_methods {
        public static void main(String args[])
        {
            overload obj = new overload();   
            int a = 0;
            obj.add(6);
            System.out.println(obj.x);     
        }
   }
a) 5
b) 6 
c) 7 
d) 8 
Answer: c 
--------
What is the output of this program?
    class overload {
        int x;
 	int y;
        void add(int a){
            x =  a + 1;
        }
        void add(int a , int b){
            x =  a + 2;
        }        
    }    
    class Overload_methods {
        public static void main(String args[])
        {
            overload obj = new overload();   
            int a = 0;
            obj.add(6, 7);
            System.out.println(obj.x);     
        }
   }
a) 6 
b) 7 
c) 8 
d) 9 
Answer: c 
--------
What is the output of this program?
   class overload {
        int x;
 	double y;
        void add(int a , int b) {
            x = a + b;
        }
        void add(double c , double d){
            y = c + d;
        }
        overload() {
            this.x = 0;
            this.y = 0;
        }        
    }    
    class Overload_methods {
        public static void main(String args[])
        {
            overload obj = new overload();   
            int a = 2;
            double b = 3.2;
            obj.add(a, a);
            obj.add(b, b);
            System.out.println(obj.x + " " + obj.y);     
        }
   }
a) 6 6 
b) 6.4 6.4 
c) 6.4 6 
d) 4 6.4 
Answer: d 
--------
What is the output of this program?
    class test {
        int a;
        int b;
        void meth(int i , int j) {
            i *= 2;
            j /= 2;
        }          
    }    
    class Output {
        public static void main(String args[])
        {
            test obj = new test();
	    int a = 10;
            int b = 20;             
            obj.meth(a , b);
            System.out.println(a + " " + b);        
        } 
    }
a) 10 20
b) 20 10 
c) 20 40 
d) 40 20 
Answer: a 
--------
Which of these keywords is used to define packages in Java? 
a) pkg 
b) Pkg 
c) package 
d) Package 
Answer: c 
--------
Which of these is a mechanism for naming and visibility control of a class and its content? 
a) Object 
b) Packages 
c) Interfaces 
d) None of the Mentioned. 
Answer: b 
--------
Which of this access specifies can be used for a class so that its members can be accessed by a different class in the same package? 
a) Public 
b) Protected 
c) No Modifier 
d) All of the mentioned 
Answer: d 
--------
Which of these access specifiers can be used for a class so that it's members can be accessed by a different class in the different package? 
a) Public 
b) Protected 
c) Private 
d) No Modifier 
Answer: a 
--------
Which of the following is correct way of importing an entire package 'pkg'? 
a) import pkg. 
b) Import pkg. 
c) import pkg.* 
d) Import pkg.* 
Answer: c 
--------
Which of the following is incorrect statement about packages? 
a) Package defines a namespace in which classes are stored. 
b) A package can contain other package within it. 
c) Java uses file system directories to store packages. 
d) A package can be renamed without renaming the directory in which the classes are stored. 
Answer: b 
--------
What is the output of this program?
    package pkg;
    class display {
        int x;
        void show() {
            if (x > 1)
                System.out.print(x + " ");
        }
    }
    class packages {
        public static void main(String args[]) {
            display[] arr=new display[3];
            for(int i=0;i<3;i++)
                arr[i]=new display();
            arr[0].x = 0;      
            arr[1].x = 1;
            arr[2].x = 2;
            for (int i = 0; i < 3; ++i)
                arr[i].show();
         }
    }
Note : packages.class file is in directory pkg; 
a) 0 
b) 1 
c) 2 
d) 0 1 2 
Answer: c 
--------
What is the output of this program?
    package pkg;
    class output {
        public static void main(String args[])
        { 
            StringBuffer s1 = new StringBuffer("Hello");
            s1.setCharAt(1, x);
            System.out.println(s1);
        }
    }
a) xello
b) xxxxx 
c) Hxllo 
d) Hexlo 
Answer: c 
--------
Which of these class produce objects with respect to geographical locations? 
a) TimeZone 
b) Locale 
c) Date 
d) SimpleTimeZone 
Answer: b 
--------
Which of these methods is not a Locale class? 
a) UK 
b) US 
c) INDIA 
d) KOREA 
Answer: c 
--------
Which of these class can generate pseudorandom numbers? 
a) Locale 
b) Rand 
c) Random 
d) None of the mentioned 
Answer: c 
--------
Which of these method of Locale class can be used to obtain country of operation? 
a) getCountry() 
b) whichCountry() 
c) DisplayCountry() 
d) getDisplayCountry() 
Answer: d 
--------
Which of these is a method can generate a boolean output? 
a) retbool() 
b) getBool() 
c) nextBool() 
d) nextBoolean() 
Answer: d 
--------
Which of these exceptions is thrown by remover() method? 
a) IOException 
b) SystemException 
c) ObjectNotFoundExeception 
d) IllegalStateException 
Answer: d 
--------
What is the output of this program?
    import java.util.*;
    class LOCALE_CLASS {
        public static void main(String args[]) {
            Locale obj = new Locale("INDIA") ;
            System.out.print(obj.getCountry());
        }
    }
a) India
b) INDIA 
c) Compilation Error 
d) Nothing is displayed 
Answer: d 
--------
What is the output of this program?
    import java.util.*;
    class LOCALE_CLASS {
        public static void main(String args[]) {
            Locale obj = new Locale("HINDI", "INDIA") ;
            System.out.print(obj.getCountry());
        }
    }
a) India 
b) INDIA 
c) Compilation Error 
d) Nothing is displayed 
Answer: b 
--------
What is the output of this program?
    import java.util.*;
    class LOCALE_CLASS {
        public static void main(String args[]) {
            Locale obj = new Locale("HINDI") ;
            System.out.print(obj.getDisplayLanguage());
        }
    }
a) India
b) INDIA 
c) HINDI 
d) Nothing is displayed 
Answer: C 
--------
Which exception is thrown by read() method? 
a) IOException 
b) InterruptedException 
c) SystemException 
d) SystemInputException 
Answer: a 
--------
Which of these is used to read a string from the input stream? 
a) get() 
b) getLine() 
c) read() 
d) readLine() 
Answer: d 
--------
Which of these class is used to read characters and strings in Java from console? 
a) BufferedReader 
b) StringReader 
c) BufferedStreamReader 
d) InputStreamReader 
Answer: a 
--------
Which of these classes are used by Byte streams for input and output operation? 
a) InputStream 
b) InputOutputStream 
c) Reader 
d) All of the mentioned 
Answer: a 
--------
Which of these class is implemented by FilterInputStream class? 
a) InputStream 
b) InputOutputStream 
c) BufferedInputStream 
d) SequenceInputStream 
Answer: a 
--------
Which of these class is used to read from a file? 
a) InputStream 
b) BufferedInputStream 
c) FileInputStream 
d) BufferedFileInputStream 
Answer: c 
--------
What is the output of this program if input given is "Hello stop World"?
    class Input_Output {
        public static void main(String args[]) throws IOException {	 
            string str;
            BufferedReader obj = new BufferedReader(new InputStreamReader(System.in));
            do {
                str = (char) obj.readLine();
	        System.out.print(str);
            } while(!str.equals("strong"));
        }
    }
a) Hello
b) Hello stop 
c) World 
d) Hello stop World 
Answer: d 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
             StringBuffer c = new StringBuffer("Hello");
             StringBuffer c1 = new StringBuffer(" World");
             c.append(c1);
             System.out.println(c);
        }
    }
a) Hello 
b) World 
c) Helloworld 
d) Hello World 
Answer: d 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
           StringBuffer s1 = new StringBuffer("Hello");
           s1.setCharAt(1,x);
           System.out.println(s1);
        }
    }
a) xello
b) xxxxx 
c) Hxllo 
d) Hexlo 
Answer: c 
--------
Which of these class contains the methods used to write in a file? 
a) FileStream 
b) FileInputStream 
c) BUfferedOutputStream 
d) FileBufferStream 
Answer: b 
--------
Which of these exception is thrown in cases when the file specified for writing it not found? 
a) IOException 
b) FileException 
c) FileNotFoundException 
d) FileInputException 
Answer: c 
--------
Which of these methods are used to read in from file? 
a) get() 
b) read() 
c) scan() 
d) readFileInput() 
Answer: b 
--------
Which of these values is returned by read() method is end of file (EOF) is encountered? 
a) 0 
b) 1 
c) -1 
d) Null 
Answer: c 
--------
Which of these exception is thrown by close() and read() methods? 
a) IOException 
b) FileException 
c) FileNotFoundException 
d) FileInputOutputException 
Answer: a 
--------
Which of these methods is used to write() into a file? 
a) put() 
b) putFile() 
c) write() 
d) writeFile() 
Answer: c 
--------
What is the output of this program?
    import java.io.*;
    class filesinputoutput {
        public static void main(String args[]) {
            InputStream obj = new FileInputStream("inputoutput.java");
            System.out.print(obj.available());
        }
    }
Note: inputoutput.java is stored in the disk.
a) true 
b) false 
c) prints number of bytes in file 
d) prints number of characters in the file 
Answer: c 
--------
What is the output of this program?
    import java.io.*;
    public class filesinputoutput {
    	public static void main(String[] args) {
 	   String obj  = "abc";
           byte b[] = obj.getBytes();
           ByteArrayInputStream obj1 = new ByteArrayInputStream(b);
           for (int i = 0; i < 2; ++ i) {
               int c;
               while((c = obj1.read()) != -1) {
            	   if(i == 0) {
            	       System.out.print(Character.toUpperCase((char)c));
                       obj2.write(1); 
            	   }
               }
               System.out.print(obj2);
           }
        }
    }
a) AaBaCa 
b) ABCaaa 
c) AaaBaaCaa 
d) AaBaaCaaa 
Answer: d 
--------
What is the output of this program?
    import java.io.*;
    class Chararrayinput {
        public static void main(String[] args) {
	    String obj  = "abcdef";
            int length = obj.length();
            char c[] = new char[length];
            obj.getChars(0, length, c, 0);
            CharArrayReader input1 = new CharArrayReader(c);
            CharArrayReader input2 = new CharArrayReader(c, 0, 3);
            int i;
            try {
		while((i = input2.read()) != -1) {
                    System.out.print((char)i);
                }
       	    } 
            catch (IOException e) {
                e.printStackTrace();
	    }
    }
a) abc
b) abcd 
c) abcde 
d) abcdef 
Answer: a 
--------
What is Recursion in Java? 
a) Recursion is a class. 
b) Recursion is a process of defining a method that calls other methods repeatedly. 
c) Recursion is a process of defining a method that calls itself repeatedly. 
d) Recursion is a process of defining a method that calls other methods which in turn call again this method. 
Answer: b 
--------
Which of these data types is used by operating system to manage the Recursion in Java? 
a) Array 
b) Stack 
c) Queue 
d) Tree 
Answer: b 
--------
Which of these will happen if recursive method does not have a base case? 
a) An infinite loop occurs 
b) System stops the program after some time. 
c) After 1000000 calls it will be automatically stopped. 
d) None of the mentioned 
Answer: a 
--------
Which of these is not a correct statement? 
a) A recursive method must have a base case. 
b) Recursion always uses stack. 
c) Recursive methods are faster that programmers written loop to call the function repeatedly using a stack. 
d) Recursion is managed by Java's Run - Time environment. 
Answer: d 
--------
Which of these packages contains the exception Stackoverflow in Java? 
a) java.lang 
b) java.util 
c) java.io 
d) java.system 
Answer: a 
--------
What is the output of this program?
    class recursion {
        int func (int n) {
            int result;
            result = func (n - 1);
            return result;
        }
    } 
    class Output {
        public static void main(String args[]) {
            recursion obj = new recursion() ;
            System.out.print(obj.func(12));
        }
    }
a) 0
b) 1 
c) Compilation Error 
d) Runtime Error 
Answer: d 
--------
What is the output of this program?
    class recursion {
        int func (int n) {
            int result;
            if (n == 1)
                return 1;
            result = func (n - 1);
            return result;
        }
    } 
    class Output {
        public static void main(String args[]) {
            recursion obj = new recursion() ;
            System.out.print(obj.func(5));
        }
    }
a) 0 
b) 1 
c) 120 
d) None of the mentioned 
Answer: b 
--------
What is the output of this program?
    class recursion {
        int fact(int n) {
            int result;
            if (n == 1)
                return 1;
            result = fact(n - 1) * n;
            return result;
        }
    } 
    class Output {
        public static void main(String args[]) {
            recursion obj = new recursion() ;
            System.out.print(obj.fact(5));
        }
    }
a) 24 
b) 30 
c) 120 
d) 720 
Answer: c 
--------
What is the output of this program?
    class recursion {
        int fact(int n) {
            int result;
            if (n == 1)
                return 1;
            result = fact(n - 1) * n;
            return result;
        }
    } 
    class Output {
        public static void main(String args[]) {
            recursion obj = new recursion() ;
            System.out.print(obj.fact(1));
        }
    }
a) 1
b) 30 
c) 120 
d) Runtime Error 
Answer: a 
--------
What is the output of relational operators? 
a) Integer 
b) Boolean 
c) Characters 
d) Double 
Answer: b 
--------
Which of these is returned by greater than, <, and equal to, ==, operator?
a) Integers
b) Floating - point numbers
c) Boolean
d) None of the mentioned
Answer:d 
--------
What is the output of this program?
    class bool_operator {
        public static void main(String args[]) 
        {    
             boolean a = true;
             boolean b = !true;
             boolean c = a | b;
 	     boolean d = a & b;
             boolean e = d ? b : c;
             System.out.println(d + " " + e);
        } 
    }
a) false false
b) true ture 
c) true false 
d) false true 
Answer: d 
--------
What is the output of this program?
    class ternary_operator {
        public static void main(String args[]) 
        {        
             int x = 3;
             int y = ~ x;
             int z;
             z = x > y ? x : y;
             System.out.print(z);
        } 
    }
a) 0 
b) 1 
c) 3 
d) -4 
Answer:c 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) 
        {    
             int x , y = 1;
             x = 10;
             if (x != 10 && x / 0 == 0)
                 System.out.println(y);
             else
                 System.out.println(++y);
        } 
    }
a) 1
b) 2 
c) Runtime error owing to division by zero in if condition. 
d) Unpredictable behavior of program. 
Answer: b 
--------
What is Remote method invocation (RMI)? 
a) RMI allows us to invoke a method of java object that executes on another machine. 
b) RMI allows us to invoke a method of java object that executes on another Thread in multithreaded programming. 
c) RMI allows us to invoke a method of java object that executes parallely in same machine. 
d) None of the mentioned 
Answer: a 
--------
Which of these package is used for remote method invocation? 
a) java.applet 
b) java.rmi 
c) java.lang.rmi 
d) java.lang.reflect 
Answer: b 
--------
Which of these methods are member of Remote class? 
a) checkIP() 
b) addLocation() 
c) AddServer() 
d) None of the mentioned 
Answer: d 
--------
Which of these Exceptions is thrown by remote method? 
a) RemoteException 
b) InputOutputException 
c) RemoteAccessException 
d) RemoteInputOutputException 
Answer: a 
--------
Which of these class is used for creating a client for a server-client operations? 
a) serverClientjava 
b) Client.java 
c) AddClient.java 
d) ServerClient.java 
Answer: c 
--------
Which of these package is used for all the text related modifications? 
a) java.text 
b) java.awt 
c) java.lang.text 
d) java.text.mofify 
Answer: a 
--------
What is the output of this program?
    import java.lang.reflect.*;
    class Additional_packages {	 
         public static void main(String args[]) {
	     try {
	         Class c = Class.forName("java.awt.Dimension");
		 Constructor constructors[] = c.getConstructors();
		 for (int i = 0; i < constructors.length; i++)
		     System.out.println(constructors[i]);
		 }
	     catch (Exception e){
             System.out.print("Exception");
             }
        }
    }
a) Program prints all the constructors of 'java.awt.Dimension' package.
b) Program prints all the possible constructors of class 'Class'. 
c) Program prints "Exception" 
d) Runtime Error 
Answer: a 
--------
What is the output of this program?
    import java.lang.reflect.*;
    class Additional_packages {	 
         public static void main(String args[]) {
	     try {
	         Class c = Class.forName("java.awt.Dimension");
		 Field fields[] = c.getFields();
		 for (int i = 0; i < fields.length; i++)
		     System.out.println(fields[i]);
		 }
	     catch (Exception e){
             System.out.print("Exception");
             }
        }    
    }
a) Program prints all the constructors of 'java.awt.Dimension' package. 
b) Program prints all the methods of 'java.awt.Dimension' package. 
c) Program prints all the data members of 'java.awt.Dimension' package. 
d) program prints all the methods and data member of 'java.awt.Dimension' package. 
Answer: c 
--------
What is the length of the application box made by this program?
    import java.awt.*;
    import java.applet.*;
    public class myapplet extends Applet {
        Graphic g;
        g.drawString("A Simple Applet",20,20);    
    }
a) 20
b) Default value 
c) Compilation Error 
d) Runtime Error 
Answer: c 
--------
Which of these types cannot be used to initiate a generic type? 
a) Integer class 
b) Float class 
c) Primitive Types 
d) Collections 
Answer: c 
--------
Which of these instance cannot be created? 
a) Integer instance. 
b) Generic class instance. 
c) Generic type instance. 
d) Collection instances. 
Answer: c 
--------
Which of these data type cannot be type parameterized? 
a) Array 
b) List 
c) Map 
d) Set 
Answer: a 
--------
Which of these Exception handlers cannot be type parameterized? 
a) catch 
b) throw 
c) throws 
d) All of the mentioned 
Answer: d 
--------
Which of the following cannot be Type parameterized? 
a) Oveloaded Methods 
b) Generic methods 
c) Class methods 
d) Overriding methods 
Answer: a 
--------
What is the output of this program?
    public class BoxDemo {
        public static <U> void addBox(U u, 
           java.util.List<Box<U>> boxes) {
           Box<U> box = new Box<>();
           box.set(u);
           boxes.add(box);
        }
        public static <U> void outputBoxes(java.util.List<Box<U>> boxes) {
            int counter = 0;
            for (Box<U> box: boxes) {
                U boxContents = box.get();
                System.out.println("Box #" + counter + " contains [" + boxContents.toString() + "]");
                counter++;
            }
        }
        public static void main(String[] args) {
            java.util.ArrayList<Box<Integer>> listOfIntegerBoxes = new java.util.ArrayList<>();
            BoxDemo.<Integer>addBox(Integer.valueOf(10), listOfIntegerBoxes);
            BoxDemo.outputBoxes(listOfIntegerBoxes);
        }
    }
a) 10
b) Box #0 [10]
c) Box contains [10]
d) Box #0 contains [10]
Answer: d 
--------
What is the output of this program?
    import java.util.*;
    public class genericstack <E> {
        Stack <E> stk = new Stack <E>();
	public void push(E obj) {
            stk.push(obj);
	public E pop() {
            E obj = stk.pop();
	    return obj;
    }
    class Output {
        public static void main(String args[]) {
            genericstack <String> gs = new genericstack<String>();
            gs.push("Hello");
            System.out.print(gs.pop() + " ");
            genericstack <Integer> gs = new genericstack<Integer>();
            gs.push(36);
            System.out.println(gs.pop());
        }
    }
a) Error 
b) Hello 
c) 36 
d) Hello 36 
Answer: d 
--------
What is the output of this program?
    import java.util.*;
    class Output {
        public static double sumOfList(List<? extends Number> list) {
            double s = 0.0;
            for (Number n : list)
                s += n.doubleValue();
            return s;
        }
        public static void main(String args[]) {
           List<Double> ld = Arrays.asList(1.2, 2.3, 3.5);
           System.out.println(sumOfList(ld));
        }
    }
a) 5.0 
b) 7.0 
c) 8.0 
d) 6.0 
Answer: b 
--------
What is the output of this program?
    import java.util.*;
    class Output {
        public static void addNumbers(List<? super Integer> list) {
            for (int i = 1; i <= 10; i++) {
                list.add(i);
            }
        }
        public static void main(String args[]) {
           List<Double> ld = Arrays.asList();
           addnumbers(10.4);
           System.out.println("getList(2)");
        }
    }
a) 1
b) 2 
c) 3 
d) 6 
Answer: a 
--------
Which of these classes encapsulate runtime enviroment? 
a) Class 
b) System 
c) Runtime 
d) ClassLoader 
Answer: c 
--------
Which of the following exceptions is thrown by every method of Runtime class? 
a) IOException 
b) SystemException 
c) SecurityException 
d) RuntimeException 
Answer: c 
--------
Which of these methods returns the total number of bytes of memory available to the program? 
a) getMemory() 
b) TotalMemory() 
c) SystemMemory() 
d) getProcessMemory() 
Answer: b 
--------
Which of these class defines how the classes are loaded? 
a) Class 
b) System 
c) Runtime 
d) ClassLoader 
Answer: d 
--------
Which of these methods return a class object given its name? 
a) getClass() 
b) findClass() 
c) getSystemClass() 
d) findSystemClass() 
Answer: d 
--------
Which of these Exceptions is thrown by loadClass() method of ClassLoader class? 
a) IOException 
b) SystemException 
c) ClassFormatError 
d) ClassNotFoundException 
Answer: d 
--------
What is the output of this program?
    class X {
        int a;
        double b;
    }
    class Y extends X {
	int c;
    }
    class Output {
        public static void main(String args[]) {
            X a = new X();
            Y b = new Y();
            Class obj;
            obj = b.getClass();
            System.out.print(obj.getSuperclass());
        }
    }
a) X
b) Y 
c) class X 
d) class Y 
Answer: c 
--------
What is the output of this program?
    class X {
        int a;
        double b;
    }
    class Y extends X {
	int c;
    }
    class Output {
        public static void main(String args[]) {
            X a = new X();
            Y b = new Y();
            Class obj;
            obj = b.getClass();
            System.out.print(b.equals(a));
        }
    }
a) 0 
b) 1 
c) true 
d) false 
Answer: d 
--------
What is the output of this program?
    class X {
        int a;
        double b;
    }
    class Y extends X {
	int c;
    }
    class Output {
        public static void main(String args[]) {
            X a = new X();
            Y b = new Y();
            Class obj;
            obj = b.getClass();
            System.out.print(obj.isInstance(a));
        }
    }
a) 0
b) 1 
c) true 
d) false 
Answer: d 
--------
Which of these method of class String is used to extract a substring from a String object? 
a) substring() 
b) Substring() 
c) SubString() 
d) None of the mentioned 
Answer: a 
--------
What will s2 contain after following lines of code? 
String s1 = "one"; 
String s2 = s1.concat("two") 
a) one 
b) two 
c) onetwo 
d) twoone 
Answer: c 
--------
Which of these method of class String is used to remove leading and trailing whitespaces? 
a) startsWith() 
b) trim() 
c) Trim() 
d) doTrim() 
Answer: b 
--------
What is the value returned by function compareTo() if the invoking string is less than the string compared? 
a) zero 
b) value less than zero 
c) value greater than zero 
d) None of the mentioned 
Answer: b 
--------
Which of the following statement is correct? 
a) replace() method replaces all occurrences of one character in invoking string with another character. 
b) replace() method replaces only first occurances of a character in invoking string with another character. 
c) replace() method replaces all the characters in invoking string with another character. 
d) replace() replace() method replaces last occurrence of a character in invoking string with another character. 
Answer: a 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
           String c = "  Hello World  ";
           String s = c.trim();
           System.out.println("\""+s+"\"");
        }
    }
a) "  Hello World  "
b) " Hello World " 
c) "Hello World" 
d) Hello world 
Answer: c 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
           String s1 = "one";
           String s2 = s1 + " two";
           System.out.println(s2);
        }
    }
a) one 
b) two 
c) one two 
d) compilation error 
Answer: c 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
           String s1 = "Hello";
           String s2 = s1.replace('l','w');
           System.out.println(s2);
        }
    }
a) hello 
b) helwo 
c) hewlo 
d) hewwo 
Answer: a 
--------
Which of these is a process of extracting/removing the state of an object from a stream? 
a) Serialization 
b) Externalization 
c) File Filtering 
d) Deserialization 
Answer: d 
--------
Which of these process occur automatically by java run time system? 
a) Serialization 
b) Memory allocation 
c) Deserialization 
d) All of the mentioned 
Answer: d 
--------
Which of these is an interface for control over serialization and deserialization? 
a) Serializable 
b) Externalization 
c) FileFilter 
d) ObjectInput 
Answer: b 
--------
Which of these interface extends DataInput interface? 
a) Serializable 
b) Externalization 
c) ObjectOutput 
d) ObjectInput 
Answer: d 
--------
Which of these is a method of ObjectInput interface used to deserialize an object from a stream? 
a) int read() 
b) void close() 
c) Object readObject() 
d) Object WriteObject() 
Answer: c 
--------
Which of these class extend InputStream class? 
a) ObjectStream 
b) ObjectInputStream 
c) ObjectOutput 
d) ObjectInput 
Answer: a 
--------
What is the output of this program?
    import java.io.*;
    class serialization {
        public static void main(String[] args) {
            try {
	        Myclass object1 = new Myclass("Hello", -7, 2.1e10);
	        FileOutputStream fos = new FileOutputStream("serial");
	        ObjectOutputStream oos = new ObjectOutputStream(fos);
	        oos.writeObject(object1);
	        oos.flush();
	        oos.close();
	    }
	    catch(Exception e) {
	        System.out.println("Serialization" + e);
                System.exit(0);
            }
	    try {
	        int x;
	        FileInputStream fis = new FileInputStream("serial");
	        ObjectInputStream ois = new ObjectInputStream(fis);
	        x = ois.readInt();
	        ois.close();
	        System.out.println(x);		    	
	    }
	    catch (Exception e) {
                System.out.print("deserialization");
	        System.exit(0);
	    }
        }
    }
    class Myclass implements Serializable {
	String s;
	int i;
	double d;
	Myclass(String s, int i, double d){
	    this.d = d;
	    this.i = i;
	    this.s = s;
    }
a) -7 
b) Hello 
c) 2.1E10 
d) deserialization 
Answer: d 
--------
What is the output of this program?
    import java.io.*;
    class streams {
        public static void main(String[] args) {
            try {
	        FileOutputStream fos = new FileOutputStream("serial");
	        ObjectOutputStream oos = new ObjectOutputStream(fos);
	        oos.writeFloat(3.5);
	        oos.flush();
	        oos.close();
	    }
	    catch(Exception e) {
	        System.out.println("Serialization" + e);
                System.exit(0);
            }
	    try {
	        FileInputStream fis = new FileInputStream("serial");
	        ObjectInputStream ois = new ObjectInputStream(fis);
	        ois.close();
	        System.out.println(ois.available());		    	
	    }
	    catch (Exception e) {
                System.out.print("deserialization");
	        System.exit(0);
	    }
        }
    }
a) 1
b) 2 
c) 3 
d) 4 
Answer: d 
--------
Which of these is a process of writing the state of an object to a byte stream? 
a) Serialization 
b) Externalization 
c) File Filtering 
d) All of the mentioned 
Answer: a 
--------
Which of these process occur automatically by java run time system? 
a) Serialization 
b) Garbage collection 
c) File Filtering 
d) All of the mentioned 
Answer: a 
--------
Which of these is an interface for control over serialization and deserialization? 
a) Serializable 
b) Externalization 
c) FileFilter 
d) ObjectInput 
Answer: b 
--------
Which of these interface extends DataOutput interface? 
a) Serializable 
b) Externalization 
c) ObjectOutput 
d) ObjectInput 
Answer: c 
--------
Which of these is a method of ObjectOutput interface used to finalize the output state so that any buffers are cleared? 
a) clear() 
b) flush() 
c) fflush() 
d) close() 
Answer: b 
--------
Which of these is method of ObjectOutput interface used to write the object to input or output stream as required? 
a) write() 
b) Write() 
c) StreamWrite() 
d) writeObject() 
Answer: a 
--------
What is the output of this program?
    import java.io.*;
    class serialization {
        public static void main(String[] args) {
            try {
                Myclass object1 = new Myclass("Hello", -7, 2.1e10);
	        FileOutputStream fos = new FileOutputStream("serial");
	        ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(object1);
                oos.flush();
                oos.close();
	    }
	    catch(Exception e) {
	        System.out.println("Serialization" + e);
                System.exit(0);
            }
	    try {
	        int x;
	        FileInputStream fis = new FileInputStream("serial");
	        ObjectInputStream ois = new ObjectInputStream(fis);
                x = ois.readInt();
                ois.close();
	        System.out.println(x);		    	
	    }
	    catch (Exception e) {
                System.out.print("deserialization");
	        System.exit(0);
	    }
        }
    }
    class Myclass implements Serializable {
	String s;
	int i;
	double d;
        Myclass(String s, int i, double d){
	    this.d = d;
	    this.i = i;
	    this.s = s;
    }
a) -7 
b) Hello 
c) 2.1E10 
d) deserialization 
Answer: d 
--------
What is the output of this program?
    import java.io.*;
    class Chararrayinput {
        public static void main(String[] args) {
	    String obj  = "abcdefgh";
            int length = obj.length();
            char c[] = new char[length];
            obj.getChars(0, length, c, 0);
            CharArrayReader input1 = new CharArrayReader(c);
            CharArrayReader input2 = new CharArrayReader(c, 1, 4);
            int i;
            int j;
            try {
		while ((i = input1.read()) == (j = input2.read())) {
                    System.out.print((char)i);
                }
       	    } 
            catch (IOException e) {
                e.printStackTrace();
	    }
    }
a) abc
b) abcd 
c) abcde 
d) None of the mentioned 
Answer: d 
--------
Which of these interface abstractes the output of messages from httpd? 
a) LogMessage 
b) LogResponse 
c) Httpdserver 
d) httpdResponse 
Answer: a 
--------
Which of these class is used to create servers that listen for either local or remote client programs? 
a) httpServer 
b) ServerSockets 
c) MimeHeader 
d) HttpResponse 
Answer: b 
--------
Which of these is a standard for communicating multimedia content over email? 
a) http 
b) https 
c) Mime 
d) httpd 
Answer: c 
--------
Which of these methods is used to make raw MIME formatted string? 
a) parse() 
b) toString() 
c) getString() 
d) parseString() 
Answer: a 
--------
Which of these class is used for operating on request from the client to the server? 
a) http 
b) httpDecoder 
c) httpConnection 
d) httpd 
Answer:b 
--------
What is the output of this program?
    import java.net.*;
    class networking {
        public static void main(String[] args) throws Exception {
            URL obj = new URL("http://www.sanfoundry.com/javamcq");
            URLConnection obj1 = obj.openConnection();
            System.out.print(obj1.getContentType());
        }
    }
Note: Host URL is written in html and simple text. 
a) html 
b) text 
c) html/text 
d) text/html 
Answer: d 
--------
Which of these is an instance variable of class httpd? 
a) port 
b) cache 
c) log 
d) All of the mentioned 
Answer: c 
--------
String in Java is a? 
a) class 
b) object 
c) variable 
d) character array 
Answer: a 
--------
Which of these method of String class is used to obtain character at specified index? 
a) char() 
b) Charat() 
c) charat() 
d) charAt() 
Answer: d 
--------
Which of these keywords is used to refer to member of base class from a sub class? 
a) upper 
b) super 
c) this 
d) None of the mentioned 
Answer: b 
--------
Which of these method of String class can be used to test to strings for equality? 
a) isequal() 
b) isequals() 
c) equal() 
d) equals() 
Answer: d 
--------
Which of the following statements are incorrect? 
a) String is a class. 
b) Strings in java are mutable. 
c) Every string is an object of class String. 
d) Java defines a peer class of String, called StringBuffer, which allows string to be altered. 
Answer: b 
--------
What is the output of this program?
    class string_demo {
        public static void main(String args[])
        {
            String obj = "I" + "like" + "Java";   
            System.out.println(obj);     
        }
   }
a) I
b) like 
c) Java 
d) IlikeJava 
Answer: d 
--------
What is the output of this program?
    class string_class {
        public static void main(String args[])
        {
            String obj = "I LIKE JAVA";   
            System.out.println(obj.charAt(3));
        } 
    }
a) I 
b) L 
c) K 
d) E 
Answer: a 
--------
What is the output of this program?
    class string_class {
        public static void main(String args[])
        {
            String obj = "I LIKE JAVA";   
            System.out.println(obj.length());
        }
    }
a) 9 
b) 10 
c) 11 
d) 12 
Answer: c 
--------
What is the output of this program?
    class string_class {
        public static void main(String args[])
        {
            String obj = "hello";
            String obj1 = "world";   
            String obj2 = obj;
            obj2 = " world";
            System.out.println(obj + " " + obj2);
        }
    }
a) hello hello
b) world world 
c) hello world 
d) world hello 
Answer: c 
--------
Which of these method of class String is used to compare two String objects for their equality? 
a) equals() 
b) Equals() 
c) isequal() 
d) Isequal() 
Answer: a 
--------
Which of these methods is used to compare a specific region inside a string with another specific region in another string? 
a) regionMatch() 
b) match() 
c) RegionMatches() 
d) regionMatches() 
Answer: d 
--------
Which of these method of class String is used to check weather a given object starts with a particular string literal? 
a) startsWith() 
b) endsWith() 
c) Starts() 
d) ends() 
Answer: a 
--------
What is the value returned by unction compareTo() if the invoking string is less than the string compared? 
a) zero 
b) value less than zero 
c) value greater than zero 
d) None of the mentioned 
Answer: b 
--------
Which of these data type value is returned by equals() method of String class? 
a) char 
b) int 
c) boolean 
d) All of the mentioned 
Answer: c 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
           String c = "Hello i love java";
           boolean var;
           var = c.startsWith("hello");
           System.out.println(var);
        }
    }
a) true
b) false 
c) 0 
d) 1 
Answer: b 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
           String s1 = "Hello i love java";
           String s2 = new String(s1);
           System.out.println((s1 == s2) + " " + s1.equals(s2));
        }
    }
a) true true 
b) false false 
c) true false 
d) false true 
Answer: d 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
           String s1 = "Hello";
           String s2 = new String(s1);
           String s3 = "HELLO";
           System.out.println(s1.equals(s2) + " " + s2.equals(s3));
        }
    }
a) true true 
b) false false 
c) true false 
d) false true 
Answer: b 
--------
Which of these class is superclass of String and StringBuffer class? 
a) java.util 
b) java.lang 
c) ArrayList 
d) None of the mentioned 
Answer: b 
--------
Which of these operators can be used to concatenate two or more String objects? 
a) + 
b) += 
c) & 
d) || 
Answer: a 
--------
Which of these method of class String is used to obtain length of String object? 
a) get() 
b) Sizeof() 
c) lengthof() 
d) length() 
Answer: d 
--------
Which of these method of class String is used to extract a single character from a String object? 
a) CHARAT() 
b) chatat() 
c) charAt() 
d) ChatAt() 
Answer: c 
--------
Which of these constructors is used to create an empty String object? 
a) String() 
b) String(void) 
c) String(0) 
d) None of the mentioned 
Answer: a 
--------
Which of these is an oncorrect statement? 
a) String objects are immutable, they cannot be changed. 
b) String object can point to some other reference of String variable. 
c) StringBuffer class is used to store string in a buffer for later use. 
d) None of the mentioned 
Answer: d 
--------
What is the output of this program?
    class String_demo {
        public static void main(String args[])
        {
            int ascii[] = { 65, 66, 67, 68};
            String s = new String(ascii, 1, 3);
            System.out.println(s);
        }
   }
a) ABC 
b) BCD 
c) CDA 
d) ABCD 
Answer: b 
--------
What is the output of this program?
    class String_demo {
        public static void main(String args[])
        {
            char chars[] = {'a', 'b', 'c'};
            String s = new String(chars);
            String s1 = "abcd";
            int len1 = s1.length();
            int len2 = s.length();
            System.out.println(len1 + " " + len2);
        }
   }
a) 3 0
b) 0 3 
c) 3 4 
d) 4 3 
Answer: d 
--------
Which of these class is used to create an object whose character sequence is mutable? 
a) String() 
b) StringBuffer() 
c) Both of the mentioned 
d) None of the mentioned 
Answer: b 
--------
Which of these method of class StringBuffer is used to concatenate the string representation to the end of invoking string? 
a) concat() 
b) append() 
c) join() 
d) concatenate() 
Answer: b 
--------
Which of these method of class StringBuffer is used to find the length of current character sequence? 
a) length() 
b) Length() 
c) capacity() 
d) Capacity() 
Answer: a 
--------
What is the string contained in s after following lines of code? 
StringBuffer s new StringBuffer("Hello"); 

a) Hell 
b) ello 
c) Hel 
d) llo 
Answer: b 
--------
Which of the following statement is correct? 
a) reverse() method reverses all characters. 
b) reverseall() method reverses all characters. 
c) replace() method replaces first occurrence of a character in invoking string with another character. 
d) replace() method replaces last occurrence of a character in invoking string with another character. 
Answer: a 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        {
            String a = "hello i love java";
            System.out.println(a.indexOf('i')+" "+a.indexOf('o')+" "+a.lastIndexOf('i')+" "+a.lastIndexOf('o'));
        }
    }
a) 6 4 6 9 
b) 5 4 5 9 
c) 7 8 8 9 
d) 4 3 6 9 
Answer: d 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
             StringBuffer c = new StringBuffer("Hello");
             StringBuffer c1 = new StringBuffer(" World");
             c.append(c1);
             System.out.println(c);
        }
    }
a) Hello 
b) World 
c) Helloworld 
d) Hello World 
Answer: d 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
           StringBuffer s1 = new StringBuffer("Hello");
           StringBuffer s2 = s1.reverse();
           System.out.println(s2);
        }
    }
a) Hello
b) olleH 
c) HelloolleH 
d) olleHHello 
Answer: b 
--------
Which of these method of class StringBuffer is used to extract a substring from a String object? 
a) substring() 
b) Substring() 
c) SubString() 
d) None of the mentioned 
Answer: a 
--------
What will s2 contain after following lines of code? 
StringBuffer s1 = "one"; 
StringBuffer s2 = s1.append("two") 
a) one 
b) two 
c) onetwo 
d) twoone 
Answer: c 
--------
Which of these method of class StringBuffer is used to reverse sequence of characters? 
a) reverse() 
b) reverseall() 
c) Reverse() 
d) reverseAll() 
Answer: a 
--------
Which of these method of class StringBuffer is used to get the length of sequence of characters? 
a) length() 
b) capacity() 
c) Length() 
d) Capacity() 
Answer: a 
--------
Which of the following are incorrect form of StringBuffer class constructor? 
a) StringBuffer() 
b) StringBuffer(int size) 
c) StringBuffer(String str) 
d) StringBuffer(int size , String str) 
Answer: d 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
             StringBuffer c = new StringBuffer("Hello");
             System.out.println(c.length());
        }
    }
a) 4
b) 5 
c) 6 
d) 7 
Answer: b 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
             StringBuffer c = new StringBuffer("Hello");
             StringBuffer c1 = new StringBuffer(" World");
             c.append(c1);
             System.out.println(c);
        }
    }
a) Hello 
b) World 
c) Helloworld 
d) Hello World 
Answer: d 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
           StringBuffer s1 = new StringBuffer("Hello");
           s1.setCharAt(1,'x');
           System.out.println(s1);
        }
    }
a) xello 
b) xxxxx 
c) Hxllo 
d) Hexlo 
Answer: d 
--------
Which of these exceptions is thrown by methods of System class? 
a) IOException 
b) SystemException 
c) SecurityException 
d) InputOutputException 
Answer: b 
--------
Which of these methods initiates garbage collection? 
a) gc() 
b) garbage() 
c) garbagecollection() 
d) Systemgarbagecollection() 
Answer: a 
--------
Which of these methods loads the specified dynamic library? 
a) load() 
b) library() 
c) loadlib() 
d) loadlibrary() 
Answer: a 
--------
Which of these method can set the out stream to oStream? 
a) setStream() 
b) setosteam() 
c) setOut() 
d) streamtoOstream() 
Answer: c 
--------
Which of these values are returns under the case of normal termination of a program? 
a) 0 
b) 1 
c) 2 
d) 3 
Answer: a 
--------
What is the output of this program?
    import java.lang.System;
    class Output {
         public static void main(String args[]) {
             long start, end;   
             start = System.currentTimeMillis();
             for (int i = 0; i < 10000000; i++);
             end = System.currentTimeMillis();
             System.out.print(end - start);
        }
    }
a) 0
b) 1 
c) 1000 
d) System Dependent 
Answer: d 
--------
What is the output of this program?
    import java.lang.System;
    class Output {
        public static void main(String args[]) {
            byte a[] = { 65, 66, 67, 68, 69, 70 };
            byte b[] = { 71, 72, 73, 74, 75, 76 };  
            System.arraycopy(a, 0, b, 0, a.length);
            System.out.print(new String(a) + " " + new String(b));
        }
    }
a) ABCDEF ABCDEF 
b) ABCDEF GHIJKL 
c) GHIJKL ABCDEF 
d) GHIJKL GHIJKL 
Answer: a 
--------
What is the output of this program?
    import java.lang.System;
    class Output {
        public static void main(String args[]) {
            byte a[] = { 65, 66, 67, 68, 69, 70 };
            byte b[] = { 71, 72, 73, 74, 75, 76 };  
            System.arraycopy(a, 0, b, 3, a.length - 3);
            System.out.print(new String(a) + " " + new String(b));
        }
    }
a) ABCDEF ABCDEF 
b) ABCDEF GHIJKL 
c) ABCDEF GHIABC 
d) GHIJKL GHIJKL 
Answer: c 
--------
What is the output of this program?
    import java.lang.System;
    class Output {
        public static void main(String args[]) {
            byte a[] = { 65, 66, 67, 68, 69, 70 };
            byte b[] = { 71, 72, 73, 74, 75, 76 };  
            System.arraycopy(a, 2, b, 3, a.length - 4);
            System.out.print(new String(a) + " " + new String(b));
        }
    }
a) ABCDEF ABCDEF
b) ABCDEF GHIJKL 
c) ABCDEF GHIABC 
d) ABCDEF GHICDL 
Answer: d 
--------
Which of these package is used for text formatting in Java programming language? 
a) java.text 
b) java.awt 
c) java.awt.text 
d) java.io 
Answer: a 
--------
Which of this class can be used to format dates and times? 
a) Date 
b) SimpleDate 
c) DateFormat 
d) textFormat 
Answer: c 
--------
Which of these method returns an instance of DateFormat that can format time information? 
a) getTime() 
b) getTimeInstance() 
c) getTimeDateinstance() 
d) getDateFormatinstance() 
Answer: b 
--------
Which of these class allows us to define our own formatting pattern for dates and time? 
a) DefinedDateFormat 
b) SimpleDateFormat 
c) ComplexDateFormat 
d) UsersDateFormat 
Answer: b 
--------
Which of these formatting strings of SimpleDateFormat class is used to print AM or PM in time? 
a) a 
b) b 
c) c 
d) d 
Answer: a 
--------
Which of these formatting strings of SimpleDateFormat class is used to print week of the year? 
a) w 
b) W 
c) s 
d) S 
Answer: a 
--------
What is the output of this program?
    import java.text.*;
    import java.util.*;
    class Date_formatting {	 
        public static void main(String args[]) {
	    Date date = new Date();
	    SimpleDateFormat sdf;
            sdf = new SimpleDateFormat("mm:hh:ss");
            System.out.print(sdf.format(date));
        }	
    }
Note : The program is executed at 3 hour 55 minutes and 4 sec (24 hours time).
a) 3:55:4 
b) 3.55.4 
c) 55:03:04 
d) 03:55:04 
Answer: c 
--------
What is the output of this program?
    import java.text.*;
    import java.util.*;
    class Date_formatting {	 
        public static void main(String args[]) {
	    Date date = new Date();
	    SimpleDateFormat sdf;
            sdf = new SimpleDateFormat("hh:mm:ss");
            System.out.print(sdf.format(date));
        }	
    }
Note : The program is executed at 3 hour 55 minutes and 4 sec (24 hours time). 
a) 3:55:4 
b) 3.55.4 
c) 55:03:04 
d) 03:55:04 
Answer: d 
--------
What is the output of this program?
    import java.text.*;
    import java.util.*;
    class Date_formatting {	 
        public static void main(String args[]) {
	    Date date = new Date();
	    SimpleDateFormat sdf;
            sdf = new SimpleDateFormat("E MMM dd yyyy");
            System.out.print(sdf.format(date));
        }	
    }
Note: The program is executed at 3 hour 55 minutes and 4 sec on Monday, 15 July(24 hours time).
a) Mon Jul 15 2013 
b) Jul 15 2013 
c) 55:03:04 Mon Jul 15 2013 
d) 03:55:04 Jul 15 2013 
Answer: a 
--------
Which of these class is used to make a thread? 
a) String 
b) System 
c) Thread 
d) Runnable 
Answer: c 
--------
Which of these interface is implemented by Thread class? 
a) Runnable 
b) Connections 
c) Set 
d) MapConnections 
Answer: a 
--------
Which of these method of Thread class is used to find out the priority given to a thread? 
a) get() 
b) ThreadPriority() 
c) getPriority() 
d) getThreadPriority() 
Answer: c 
--------
Which of these method of Thread class is used to Suspend a thread for a period of time? 
a) sleep() 
b) terminate() 
c) suspend() 
d) stop() 
Answer: a 
--------
Which function of pre defined class Thread is used to check weather current thread being checked is still running? 
a) isAlive() 
b) Join() 
c) isRunning() 
d) Alive() 
Answer:a 
--------
What is the output of this program?
    class multithreaded_programing {
        public static void main(String args[]) {
            Thread t = Thread.currentThread();
            t.setName("New Thread");
            System.out.println(t);        
        }
    }
a) Thread[5,main]
b) Thread[New Thread,5]
c) Thread[main,5,main]
d) Thread[New Thread,5,main]
Answer: d 
--------
What is the priority of the thread in output of this program?
    class multithreaded_programing {
        public static void main(String args[]) {
            Thread t = Thread.currentThread();
            t.setName("New Thread");
            System.out.println(t.getName());        
        }
    }
a) main 
b) Thread 
c) New Thread 
d) Thread[New Thread,5,main]
Answer: c 
--------
What is the name of the thread in output of this program?
    class multithreaded_programing {
        public static void main(String args[]) {
            Thread t = Thread.currentThread();
            System.out.println(t.getPriority());        
        }
    }
a) 0
b) 1 
c) 4 
d) 5 
Answer: d 
--------
Which of interface contains all the methods used for handling thread related operations in Java? 
a) Runnable interface 
b) Math interface 
c) System interface 
d) ThreadHandling interface 
Answer: d 
--------
Which of these class is used to make a thread? 
a) String 
b) System 
c) Thread 
d) Runnable 
Answer: c 
--------
Which of these interface is implemented by Thread class? 
a) Runnable 
b) Connections 
c) Set 
d) MapConnections 
Answer: a 
--------
Which of these method of Thread class is used to suspend a thread for a period of time? 
a) sleep() 
b) terminate() 
c) suspend() 
d) stop() 
Answer: a 
--------
toRadian() and toDegree() methods were added by which version of Java? 
a) Java 1.0 
b) Java 1.5 
c) Java 2.0 
d) Java 3.0 
Answer: c 
--------
What is the output of this program?
    class newthread implements Runnable {
	Thread t1,t2;
        newthread() {
            t1 = new Thread(this,"Thread_1");
            t2 = new Thread(this,"Thread_2");
            t1.start();
            t2.start();
	public void run() {
            t2.setPriority(Thread.MAX_PRIORITY);	
	    System.out.print(t1.equals(t2));
        }    
    }
    class multithreaded_programing {
        public static void main(String args[]) {
            new newthread();        
        }
    }
a) true
b) false 
c) truetrue 
d) falsefalse 
Answer: d 
--------
What is the output of this program?
    class newthread implements Runnable {
	Thread t;
        newthread() {
            t = new Thread(this,"New Thread");
            t.start();
	public void run() {
            t.setPriority(Thread.MAX_PRIORITY);	
            System.out.println(t);
    }
    class multithreaded_programing {
        public static void main(String args[]) {
            new newthread();        
        }
    }
a) Thread[New Thread,0,main]
b) Thread[New Thread,1,main]
c) Thread[New Thread,5,main]
d) Thread[New Thread,10,main]
Answer: d 
--------
What is the output of this program?
    class newthread implements Runnable {
	Thread t;
        newthread() {
            t = new Thread(this,"My Thread");
            t.start();
    }
    class multithreaded_programing {
        public static void main(String args[]) {
            new newthread();        
        }
    }
a) My Thread 
b) Thread[My Thread,5,main]
c) Compilation Error 
d) Runtime Error 
Answer: c 
--------
What is the output of this program?
    class newthread implements Runnable {
	Thread t;
        newthread() {
            t = new Thread(this,"My Thread");
            t.start();
	public void run() {
	    System.out.println(t.getName());
    }
    class multithreaded_programing {
        public static void main(String args[]) {
            new newthread();        
        }
    }
a) My Thread
b) Thread[My Thread,5,main]
c) Compilation Error 
d) Runtime Error 
Answer: a 
--------
Which of these keywords is used to generate an exception explicitly? 
a) try 
b) finally 
c) throw 
d) catch 
Answer: c 
--------
Which of these class is related to all the exceptions that are explicitly thrown? 
a) Error 
b) Exception 
c) Throwable 
d) Throw 
Answer: c 
--------
Which of these operator is used to  generate an instance of an exception than can be thrown by using throw? 
a) new 
b) malloc 
c) alloc 
d) thrown 
Answer: a 
--------
Which of these handles the exception when no catch is used? 
a) Default handler 
b) finally 
c) throw handler 
d) Java run time system 
Answer: a 
--------
Which of these keywords is used to by the calling function to guard against the exception that is thrown by called function? 
a) try 
b) throw 
c) throws 
d) catch 
Answer: c 
--------
What is the output of this program?
    class exception_handling {
        public static void main(String args[]) {
            try {
                int a = args.length;
                int b = 10 / a;
                System.out.print(a);
                try {
                    if (a == 1)
                        a = a / a - a;
                    if (a == 2) {
                        int c = {1};
                        c[8] = 9;
                    }
                }
                catch (ArrayIndexOutOfBoundException e) {
                    System.out.println("TypeA");
                }
                catch (ArithmeticException e) {
                    System.out.println("TypeB");
                }
            }
        }
    }
a) TypeA
b) TypeB 
c) 0TypeA 
d) 0TypeB 
Note : Execution command line : $ java exception_handling 
Answer: b 
--------
What is the output of this program?
    class exception_handling {
        public static void main(String args[]) {
            try {
                throw new NullPointerException ("Hello");
                System.out.print("A");
            }
            catch(ArithmeticException e) {
                System.out.print("B");        	
            }
        }
    }
a) A 
b) B 
c) Hello 
d) Runtime Error 
Answer: b 
--------
What is the output of this program?
    class exception_handling {
        static void throwexception() throws ArithmeticException {        
            System.out.print("0");
            throw new ArithmeticException ("Exception");
        }
        public static void main(String args[]) {
            try {
                throwexception();
            }
            catch (ArithmeticException e) {
                System.out.println("A");
            }
        }
    }
a) A 
b) 0 
c) 0A 
d) Exception 
Answer: c 
--------
What is use of Observable class? 
a) It is used to create global subclasses 
b) It is used to create classes that other part of program can observe. 
c) It is used to create classes that can be accessed by other parts of program. 
d) It is used to create methods that can be accessed by other parts of program. 
Answer: b 
--------
Which of these methods is used to notify observer the change in observed object? 
a) update() 
b) notify() 
c) check() 
d) observed() 
Answer: a 
--------
Which of these methods calls update() method? 
a) notify() 
b) observeObject() 
c) updateObserver() 
d) notifyObserver() 
Answer: d 
--------
Which of these methods is called when observed object has changed? 
a) setChanged() 
b) update() 
c) notifyObserver() 
d) All of the mentioned 
Answer: d 
--------
Which of these classes can schedule task for execution in future? 
a) Thread 
b) Timer 
c) System 
d) Observer 
Answer: b 
--------
Which of these interfaces is implemented by TimerTask class? 
a) Runnable 
b) Thread 
c) Observer 
d) ThreadCount 
Answer: c 
--------
What is the output of this program?
    import java.util.*;
    class LOCALE_CLASS {
        public static void main(String args[]) {
            Locale obj = new Locale("HINDI", "INDIA") ;
            System.out.print(obj.getCountry());
        }
    }
a) India 
b) INDIA 
c) Compilation Error 
d) Nothing is displayed 
Answer: b 
--------
What is the output of this program?
    import java.util.*;
    class LOCALE_CLASS {
        public static void main(String args[]) {
            Locale obj = new Locale("HINDI") ;
            System.out.print(obj.getDisplayLanguage());
        }
    }
a) India
b) INDIA 
c) HINDI 
d) Nothing is displayed 
Answer: C 
--------
What is the use of try & catch? 
a) It allows us to manually handle the exception. 
b) It allows to fix errors. 
c) It prevents automatic terminating of the program in cases when an exception occurs. 
d) All of the mentioned. 
Answer: d 
--------
Which of these keywords are used for the block to be examined for exceptions? 
a) try 
b) catch 
c) throw 
d) check 
Answer: a 
--------
Which of these keywords are used for the block to handle the exceptions generated by try block? 
a) try 
b) catch 
c) throw 
d) check 
Answer: b 
--------
Which of these keywords are used for generating an exception manually? 
a) try 
b) catch 
c) throw 
d) check 
Answer: c 
--------
Which of these statements is incorrect? 
a) try block need not to be followed by catch block. 
b) try block can be followed by finally block instead of catch block. 
c) try can be followed by both catch and finally block. 
d) try need not to be followed by anything. 
Answer: d 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
           try {
               int a = 0;
               int b = 5;
               int c = b / a;
               System.out.print("Hello");
           }
           catch(Exception e) {
               System.out.print("World");
           } 
        }
    }
a) Hello
b) World 
c) HelloWOrld 
d) Compilation Error 
Answer: b 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
           try {
               int a = 0;
               int b = 5;
               int c = a / b;
               System.out.print("Hello");
           }
           catch(Exception e) {
               System.out.print("World");
           } 
        }
    }
a) Hello 
b) World 
c) HelloWOrld 
d) Compilation Error 
Answer: a 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
           try {
               int a = 0;
               int b = 5;
               int c = b / a;
               System.out.print("Hello");
           } 
        }
    }
a) Hello 
b) World 
c) HelloWOrld 
d) Compilation Error 
Answer: d 
--------
What is the output of this program?
    class Output {
        public static void main(String args[]) {
           try {
               int a = 0;
               int b = 5;
               int c = a / b;
               System.out.print("Hello");
           }
           finally {
               System.out.print("World");
           } 
        }
    }
a) Hello
b) World 
c) HelloWOrld 
d) Compilation Error 
Answer: c 
--------
Why are generics used? 
a) Generics make code more fast. 
b) Generics make code more optimised and readable. 
c) Generics add stability to your code by making more of your bugs detectable at compile time. 
d) Generics add stability to your code by making more of your bugs detectable at run time. 
Answer: c 
--------
Which of these type parameters is used for a generic class to return and accept any type of object? 
a) K 
b) N 
c) T 
d) V 
Answer: c 
--------
Which of these type parameters is used for a generic class to return and accept a number? 
a) K 
b) N 
c) T 
d) V 
Answer: b 
--------
Which of these is an correct way of defining generic class? 
a) class name(T1, T2, ..., Tn) { /* ... */ } 
b) class name<T1, T2, ..., Tn> { /* ... */ } 
c) class name[T1, T2, ..., Tn] { /* ... */ } 
d) class name{T1, T2, ..., Tn} { /* ... */ } 
Answer: b 
--------
Which of the following is incorrect statement regarding the use of generics and parameterized types in Java? 
a) Generics provide type safety by shifting more type checking responsibilities to the compiler. 
b) Generics and parameterized types eliminate the need for down casts when using Java Collections. 
c) When designing your own collections class (say, a linked list), generics and parameterized types allow you to achieve type safety with just a single class definition as opposed to defining multiple classes. 
d) All of the mentioned 
Answer: c 
--------
Which of the following reference types cannot be generic? 
a) Anonymous inner class 
b) Interface 
c) Inner class 
d) All of the mentioned 
Answer: a 
--------
What is the output of this program?
    public class BoxDemo {
        public static <U> void addBox(U u, java.util.List<Box<U>> boxes) {
           Box<U> box = new Box<>();
           box.set(u);
           boxes.add(box);
        }
        public static <U> void outputBoxes(java.util.List<Box<U>> boxes) {
            int counter = 0;
            for (Box<U> box: boxes) {
                U boxContents = box.get();
                System.out.println("Box #" + counter + " contains [" + boxContents.toString() + "]");
                counter++;
            }
        }
        public static void main(String[] args) {
            java.util.ArrayList<Box<Integer>> listOfIntegerBoxes = new java.util.ArrayList<>();
            BoxDemo.<Integer>addBox(Integer.valueOf(10), listOfIntegerBoxes);
            BoxDemo.outputBoxes(listOfIntegerBoxes);
        }
    }
a) 10
b) Box #0 [10]
c) Box contains [10]
d) Box #0 contains [10]
Answer: d 
--------
What is the output of this program?
    public class BoxDemo {
        public static <U> void addBox(U u, 
           java.util.List<Box<U>> boxes) {
           Box<U> box = new Box<>();
           box.set(u);
           boxes.add(box);
        }
        public static <U> void outputBoxes(java.util.List<Box<U>> boxes) {
            int counter = 0;
            for (Box<U> box: boxes) {
                U boxContents = box.get();
                System.out.println("[" + boxContents.toString() + "]");
                counter++;
            }
        }
        public static void main(String[] args) {
            java.util.ArrayList<Box<Integer>> listOfIntegerBoxes = new java.util.ArrayList<>();
            BoxDemo.<Integer>addBox(Integer.valueOf(0), listOfIntegerBoxes);
            BoxDemo.outputBoxes(listOfIntegerBoxes);
        }
    }
a) 0 
b) 1 
c) [1]
d) [0]
Answer: d 
--------
What is the output of this program?
    import java.util.*;
    public class genericstack <E> {
        Stack <E> stk = new Stack <E>();
	public void push(E obj) {
            stk.push(obj);
	public E pop() {
            E obj = stk.pop();
	    return obj;
    }
    class Output {
        public static void main(String args[]) {
            genericstack <String> gs = new genericstack<String>();
            gs.push("Hello");
            System.out.print(gs.pop() + " ");
            genericstack <Integer> gs = new genericstack<Integer>();
            gs.push(36);
            System.out.println(gs.pop());
        }
    }
a) Error
b) Hello 
c) 36 
d) Hello 36 
Answer: d 
--------
What does URL stands for? 
a) Uniform Resource Locator 
b) Uniform Resource Latch 
c) Universal Resource Locator 
d) Universal Resource Latch 
Answer: a 
--------
Which of these exception is thrown by URL class's constructors? 
a) URLNotFound 
b) URLSourceNotFound 
c) MalformedURLException 
d) URLNotFoundException 
Answer: c 
--------
Which of these methods is used to know host of an URL? 
a) host() 
b) getHost() 
c) GetHost() 
d) gethost() 
Answer: b 
--------
Which of these methods is used to know the full URL of an URL object? 
a) fullHost() 
b) getHost() 
c) ExternalForm() 
d) toExternalForm() 
Answer: d 
--------
Which of these class is used to access actual bits or content information of a URL? 
a) URL 
b) URLDecoder 
c) URLConnection 
d) All of the mentioned 
Answer: d 
--------
Which of these class is used to encapsulate IP address and DNS? 
a) DatagramPacket 
b) URL 
c) InetAddress 
d) ContentHandler 
Answer: c 
--------
What is the output of this program?
    import java.net.*;
    class networking {
        public static void main(String[] args) throws MalformedURLException {
            URL obj = new URL("http://www.sanfoundry.com/javamcq");
            System.out.print(obj.getProtocol());
        }
    }
a) http
b) https 
c) www 
d) com 
Answer: a 
--------
What is the output of this program?
    import java.net.*;
    class networking {
        public static void main(String[] args) throws MalformedURLException {
            URL obj = new URL("http://www.sanfoundry.com/javamcq");
            System.out.print(obj.getPort());
        }
    }
a) 1 
b) 0 
c) -1 
d) garbage value 
Answer: c 
--------
What is the output of this program?
    import java.net.*;
    class networking {
        public static void main(String[] args) throws MalformedURLException {
            URL obj = new URL("http://www.sanfoundry.com/javamcq");
            System.out.print(obj.getHost());
        }
    }
a) sanfoundry
b) sanfoundry.com 
c) www.sanfoundry.com 
d) http://www.sanfoundry.com/javamcq 
Answer: c 
--------
Which of these is wildcard symbol? 
a) ? 
b) ! 
c) % 
d) & 
Answer: a 
--------
What is use of wildcards? 
a) It is used in cases when type being operated upon is not known. 
b) It is used to make code more readable. 
c) It is used to access members of super class. 
d) It is used for type argument of generic method 
Answer: a 
--------
Which of these keywords is used to upper bound a wildcard? 
a) stop 
b) bound 
c) extends 
d) implements 
Answer: c 
--------
Which of these is an correct way making a list that is upper bounded by class Number? 
a) List<? extends Number> 
b) List<extends ? Number> 
c) List(? extends Number) 
d) List(? UpperBounds Number) 
Answer: a 
--------
Which of the following is incorrect statement regarding the use of generics and parameterized types in Java? 
a) Generics provide type safety by shifting more type checking responsibilities to the compiler. 
b) Generics and parameterized types eliminate the need for down casts when using Java Collections. 
c) When designing your own collections class (say, a linked list), generics and parameterized types allow you to achieve type safety with just a single class definition as opposed to defining multiple classes. 
d) All of the mentioned 
Answer: c 
--------
Which of the following keywords are used for lower bounding a wild card? 
a) extends 
b) super 
c) class 
d) lower 
Answer: b 
--------
What is the output of this program?
    import java.util.*;
    class Output {
        public static double sumOfList(List<? extends Number> list) {
            double s = 0.0;
            for (Number n : list)
                s += n.doubleValue();
            return s;
        }
        public static void main(String args[]) {
            List<Integer> li = Arrays.asList(1, 2, 3);
            System.out.println(sumOfList(li));
        }
    }
a) 0
b) 4 
c) 5.0 
d) 6.0 
Answer: d 
--------
What is the output of this program?
    import java.util.*;
    class Output {
        public static double sumOfList(List<? extends Number> list) {
            double s = 0.0;
            for (Number n : list)
                s += n.doubleValue();
            return s;
        }
        public static void main(String args[]) {
           List<Double> ld = Arrays.asList(1.2, 2.3, 3.5);
           System.out.println(sumOfList(ld));
        }
    }
a) 5.0 
b) 7.0 
c) 8.0 
d) 6.0 
Answer: b 
--------
What is the output of this program?
    import java.util.*;
    class Output {
        public static void addNumbers(List<? super Integer> list) {
            for (int i = 1; i <= 10; i++) {
                list.add(i);
            }
        }
        public static void main(String args[]) {
           List<Double> ld = Arrays.asList();
           addnumbers(10.4);
           System.out.println("getList(2)");
        }
    }
a) 1
b) 2 
c) 3 
d) 6 
Answer: a 
--------
Which of these class contains the methods print() & println()? 
a) System 
b) System.out 
c) BUfferedOutputStream 
d) PrintStream 
Answer: d 
--------
Which of these methods can be used to writing console output? 
a) print() 
b) println() 
c) write() 
d) All of the mentioned 
Answer: d 
--------
Which of these class is used to create an object whose character sequence is mutable? 
a) String() 
b) StringBuffer() 
c) Both of the mentioned 
d) None of the mentioned 
Answer: b 
--------
Which of these method of class StringBuffer is used to reverse sequence of characters? 
a) reverse() 
b) reverseall() 
c) Reverse() 
d) reverseAll() 
Answer: a 
--------
Which of these classes are used by character streams output operations? 
a) InputStream 
b) Writer 
c) ReadStream 
d) InputOutputStream 
Answer: b 
--------
Which of the following statement is correct? 
a) reverse() method reverses all characters. 
b) reverseall() method reverses all characters. 
c) replace() method replaces first occurrence of a character in invoking string with another character. 
d) replace() method replaces last occurrence of a character in invoking string with another character. 
Answer: a 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        {
            String a="hello i love java";
            System.out.println(indexof('i')+" "+indexof('o')+" "+lastIndexof('i')+" "+lastIndexof('o') ));
        }
    }
a) 6 4 6 9
b) 5 4 5 9 
c) 7 8 8 9 
d) 4 3 6 9 
Answer:a 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        { 
           StringBuffer s1 = new StringBuffer("Hello");
           StringBuffer s2 = s1.reverse();
           System.out.println(s2);
        }
    }
a) Hello 
b) olleH 
c) HelloolleH 
d) olleHHello 
Answer: b 
--------
What is the output of this program?
    class output {
        public static void main(String args[])
        {
           StringBuffer s1 = new StringBuffer("Hello World");
           s1.insert(6 , "Good ");
           System.out.println(s1);
        }
   }
a) HelloGoodWorld
b) HellGoodoWorld 
c) HellGood oWorld 
d) Hello Good World 
Answer: d 
--------
